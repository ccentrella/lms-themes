<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

  <!--© 2016-2018 Autosoft Corporation. All rights reserved. Version: 2.0.0.1-->

  <!--The background for large controls-->
  <SolidColorBrush x:Key="CrystalBackgroundFill"
                   Color="#999999" />

  <!--The background for small controls-->
  <SolidColorBrush x:Uid="SolidColorBrush_1"
                   x:Key="CrystalBackgroundFill2"
                   Color="#828282" />

  <!--The background used in other controls-->
  <SolidColorBrush x:Uid="SolidColorBrush_2"
                   x:Key="CrystalBackgroundFill3"
                   Color="DimGray" />

  <!--The background for the header and footer-->
  <SolidColorBrush x:Uid="SolidColorBrush_3"
                   x:Key="HeaderFooterBackground"
                   Color="#525252" />

  <!--The background for pop-ups-->
  <SolidColorBrush x:Uid="SolidColorBrush_4"
                   x:Key="PopupBackground"
                   Color="{Binding Color, Source={StaticResource HeaderFooterBackground}}" />

  <!--The border for large controls-->
  <SolidColorBrush x:Key="CrystalBorder"
                   Color="#828282" />

  <!--The border for small controls-->
  <SolidColorBrush x:Uid="SolidColorBrush_5"
                   x:Key="CrystalBorder2"
                   Color="#828282" />

  <!--The window border-->
  <SolidColorBrush x:Uid="SolidColorBrush_5_1"
                   x:Key="WindowBorder"
                   Color="#525252" />

  <!--The border thickness for large controls-->
  <Thickness x:Key="CrystalBorderThickness"
			   Bottom="6"
			   Left="6"
			   Top="6"
			   Right="6" />

  <!--The border thickness for small controls-->
  <Thickness x:Key="CrystalBorderThickness2"
			   Bottom="1"
			   Left="1"
			   Top="1"
			   Right="1" />

  <!--The foreground for large controls-->
  <SolidColorBrush x:Key="CrystalForeground"
					 Color="White" />

  <!--The foreground for small controls-->
  <SolidColorBrush x:Key="CrystalForeground2"
					 Color="White" />

  <!--The foreground for large headings-->
  <SolidColorBrush x:Key="CrystalHeadingForeground"
					 Color="White" />

  <!--The foreground for small headings-->
  <SolidColorBrush x:Key="CrystalHeadingForeground2"
					 Color="White" />

  <!--The dark foreground for large controls-->
  <SolidColorBrush x:Key="CrystalDarkForeground"
					 Color="DimGray" />

  <!--The dark foreground for small controls-->
  <SolidColorBrush x:Key="CrystalDarkForeground2"
					 Color="DimGray" />

  <!--The dark foreground for large headings-->
  <SolidColorBrush x:Key="CrystalDarkHeadingForeground"
					 Color="DimGray" />

  <!--The dark foreground for small headings-->
  <SolidColorBrush x:Key="CrystalDarkHeadingForeground2"
					 Color="DimGray" />

  <SolidColorBrush x:Key="LightHoverFill" Color="#E3E3E3"/>
  <SolidColorBrush x:Key="LightPressedFill" Color="#B5B5B5"/>

  <!--Set template for crystal advanced buttons. These are advanced, and greatly fade when disabled.-->
  <ControlTemplate x:Uid="ControlTemplate_1"
                   TargetType="{x:Type Button}"
                   x:Key="CrystalAdvancedButton">
    <!--Advanced-->
    <Grid x:Uid="Grid_1"
          ClipToBounds="{TemplateBinding ClipToBounds}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Uid="CommonStates"
                          x:Name="CommonStates">
          <VisualStateGroup.Transitions>
            <VisualTransition x:Uid="VisualTransition_1"
                              GeneratedDuration="0:0:0.5" />
            <VisualTransition x:Uid="VisualTransition_2"
                              To="Pressed"
                              GeneratedDuration="0" />
            <VisualTransition x:Uid="VisualTransition_3"
                              From="Pressed"
                              GeneratedDuration="0" />
          </VisualStateGroup.Transitions>
          <VisualState x:Uid="Normal"
                       x:Name="Normal" />
          <VisualState x:Uid="Disabled"
                       x:Name="Disabled">
            <Storyboard x:Uid="Storyboard_1">
              <DoubleAnimation x:Uid="DoubleAnimation_1"
                               Storyboard.TargetProperty="Opacity"
                               To="0.3" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Uid="Background"
              x:Name="Background"
              BorderBrush="{TemplateBinding BorderBrush}"
              CornerRadius="15"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}" />
      <ContentPresenter x:Uid="Content"
                        RecognizesAccessKey="True"
                        Margin="{TemplateBinding Padding}"
                        x:Name="Content"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger x:Uid="MultiTrigger_1">
        <MultiTrigger.Conditions>
          <Condition x:Uid="Condition_1"
                     Property="IsFocused"
                     Value="True" />
          <Condition x:Uid="Condition_2"
                     Property="IsKeyboardFocusWithin"
                     Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard x:Uid="focusedStoryboard"
                           x:Name="focusedStoryboard">
            <Storyboard x:Uid="Storyboard_4">
              <DoubleAnimation x:Uid="DoubleAnimation_4"
                               Storyboard.TargetName="Background"
                               Storyboard.TargetProperty="Opacity"
                               From="0.8"
                               To="0.95"
                               AutoReverse="True"
                               RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                  <QuadraticEase x:Uid="QuadraticEase_1"
                                 EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
            </Storyboard>
          </BeginStoryboard>
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <RemoveStoryboard x:Uid="RemoveStoryboard_1"
                            BeginStoryboardName="focusedStoryboard" />
        </MultiTrigger.ExitActions>
      </MultiTrigger>
      <Trigger x:Uid="Trigger_1"
               Property="IsDefaulted"
               Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard x:Uid="defaultedStoryboard"
                           x:Name="defaultedStoryboard">
            <Storyboard x:Uid="Storyboard_5">
              <DoubleAnimation x:Uid="DoubleAnimation_5"
                               Storyboard.TargetName="Background"
                               Storyboard.TargetProperty="Opacity"
                               From="0.8"
                               To="0.95"
                               AutoReverse="True"
                               RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                  <QuadraticEase x:Uid="QuadraticEase_2"
                                 EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <RemoveStoryboard x:Uid="RemoveStoryboard_2"
                            BeginStoryboardName="defaultedStoryboard" />
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource CrystalBackgroundFill2}" />
        <Setter Property="Foreground"
                Value="{DynamicResource CrystalForeground2}" />
      </Trigger>
      <Trigger Property="IsPressed"
               Value="True">
        <Setter Property="Background"
                Value="Black" />
        <Setter Property="Foreground"
                Value="{DynamicResource CrystalForeground2}" />
      </Trigger>
      <Trigger Property="IsFocused"
               Value="True">
        <Setter Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter Property="BorderThickness"
                Value="1.5" />
      </Trigger>
      <Trigger Property="IsDefaulted"
               Value="True">
        <Setter Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter Property="BorderThickness"
                Value="1.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--Set template for crystal chrome buttons. These are advanced, and disappear when disabled.-->
  <SolidColorBrush x:Key="ChromeButtonForeground"
          Color="Blue" />
  <SolidColorBrush x:Key="ChromeButtonBackground"
					 Color="White" />
  <SolidColorBrush x:Key="CloseChromeButtonForeground"
					 Color="White" />
  <SolidColorBrush x:Key="CloseChromeButtonBackground"
					 Color="Red" />
  <ControlTemplate TargetType="{x:Type Button}"
					 x:Key="CrystalChromeButton">
    <!--Advanced-->
    <Grid x:Uid="Grid_1"
          ClipToBounds="{TemplateBinding ClipToBounds}">
      <Border x:Uid="Background"
           x:Name="Background"
           BorderBrush="{TemplateBinding BorderBrush}"
           CornerRadius="0"
           BorderThickness="{TemplateBinding BorderThickness}"
           Background="{TemplateBinding Background}" />
      <ContentPresenter x:Uid="Content"
                        RecognizesAccessKey="True"
                        Margin="{TemplateBinding Padding}"
                        x:Name="Content"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger x:Uid="MultiTrigger_1">
        <MultiTrigger.Conditions>
          <Condition x:Uid="Condition_1"
                     Property="IsFocused"
                     Value="True" />
          <Condition x:Uid="Condition_2"
                     Property="IsKeyboardFocusWithin"
                     Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard x:Uid="focusedStoryboard"
                           x:Name="focusedStoryboard">
            <Storyboard x:Uid="Storyboard_4">
              <DoubleAnimation x:Uid="DoubleAnimation_4"
                               Storyboard.TargetName="Background"
                               Storyboard.TargetProperty="Opacity"
                               From="0.8"
                               To="0.95"
                               AutoReverse="True"
                               RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                  <QuadraticEase x:Uid="QuadraticEase_1"
                                 EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
            </Storyboard>
          </BeginStoryboard>
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <RemoveStoryboard x:Uid="RemoveStoryboard_1"
                            BeginStoryboardName="focusedStoryboard" />
        </MultiTrigger.ExitActions>
      </MultiTrigger>
      <Trigger x:Uid="Trigger_1"
               Property="IsDefaulted"
               Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard x:Uid="defaultedStoryboard"
                           x:Name="defaultedStoryboard">
            <Storyboard x:Uid="Storyboard_5">
              <DoubleAnimation x:Uid="DoubleAnimation_5"
                               Storyboard.TargetName="Background"
                               Storyboard.TargetProperty="Opacity"
                               From="0.8"
                               To="0.95"
                               AutoReverse="True"
                               RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                  <QuadraticEase x:Uid="QuadraticEase_2"
                                 EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <RemoveStoryboard x:Uid="RemoveStoryboard_2"
                            BeginStoryboardName="defaultedStoryboard" />
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource CrystalBackgroundFill2}" />
        <Setter Property="Foreground"
                Value="{DynamicResource CrystalForeground2}" />
      </Trigger>
      <Trigger Property="IsPressed"
               Value="True">
        <Setter Property="Background"
                Value="Black" />
        <Setter Property="Foreground"
                Value="{DynamicResource CrystalForeground2}" />
      </Trigger>
      <Trigger Property="IsFocused"
               Value="True">
        <Setter Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter Property="BorderThickness"
                Value="1.5" />
      </Trigger>
      <Trigger Property="IsDefaulted"
               Value="True">
        <Setter Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter Property="BorderThickness"
                Value="1.5" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--Set template for crystal icon buttons. By default, these have a transparent border and background.-->
  <Style x:Uid="Style_2"
         TargetType="{x:Type Button}"
         x:Key="CrystalIconButton">
    <Setter x:Uid="Setter_4"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_5"
            Property="BorderBrush"
            Value="Transparent" />
    <Setter x:Uid="Setter_6"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_4"
                         TargetType="{x:Type Button}">
          <Grid x:Uid="MainGrid"
                x:Name="MainGrid"
                ClipToBounds="False">
            <Border x:Uid="Border_3"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter x:Uid="ContentPresenter_3"
                                RecognizesAccessKey="True"
                                Margin="{TemplateBinding Padding}"
                                x:Name="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <Ellipse x:Uid="AnimationEllipse"
                     x:Name="AnimationEllipse"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Height="{TemplateBinding ActualHeight}"
                     Width="{TemplateBinding ActualWidth}"
                     Fill="Black"
                     Opacity="0"
                     RenderTransformOrigin="0.5,0.5">
              <Ellipse.RenderTransform>
                <ScaleTransform x:Uid="ScaleTransform_1"
                                ScaleX="0.15"
                                ScaleY="0.15" />
              </Ellipse.RenderTransform>
              <Ellipse.CacheMode>
                <BitmapCache x:Uid="BitmapCache_1"
                             RenderAtScale="2" />
              </Ellipse.CacheMode>
            </Ellipse>

          </Grid>

          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_4"
                     Property="IsPressed"
                     Value="True">
              <Setter x:Uid="Setter_7"
                      Property="Effect">
                <Setter.Value>
                  <DropShadowEffect x:Uid="DropShadowEffect_1"
                                    Color="{TemplateBinding Background}"
                                    ShadowDepth="0.2" />
                </Setter.Value>
              </Setter>
            </Trigger>

            <!--While the mouse hovers over the button, there will be a drop shadow and a circle.-->
            <Trigger x:Uid="Trigger_5"
                     Property="IsMouseOver"
                     Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Uid="BeginStoryboard_1">
                  <Storyboard x:Uid="Storyboard_12">
                    <DoubleAnimation x:Uid="DoubleAnimation_10"
                                     Duration="0:0:0.25"
                                     Storyboard.TargetName="AnimationEllipse"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.4" />
                    <DoubleAnimation  x:Uid="DoubleAnimation_11"
                                      Duration="0:0:0.25"
                                      Storyboard.TargetName="AnimationEllipse"
                                      Storyboard.TargetProperty="RenderTransform.ScaleX"
                                      To="1.6" />
                    <DoubleAnimation  x:Uid="DoubleAnimation_12"
                                      Duration="0:0:0.25"
                                      Storyboard.TargetName="AnimationEllipse"
                                      Storyboard.TargetProperty="RenderTransform.ScaleY"
                                      To="1.6" />

                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard x:Uid="BeginStoryboard_2">
                  <Storyboard x:Uid="Storyboard_13">
                    <DoubleAnimation  x:Uid="DoubleAnimation_13"
                                      Duration="0:0:0.25"
                                      Storyboard.TargetName="AnimationEllipse"
                                      Storyboard.TargetProperty="Opacity"
                                      To="0" />
                    <DoubleAnimation  x:Uid="DoubleAnimation_14"
                                      Duration="0:0:0.25"
                                      Storyboard.TargetName="AnimationEllipse"
                                      Storyboard.TargetProperty="RenderTransform.ScaleX"
                                      To="1" />
                    <DoubleAnimation  x:Uid="DoubleAnimation_15"
                                      Duration="0:0:0.25"
                                      Storyboard.TargetName="AnimationEllipse"
                                      Storyboard.TargetProperty="RenderTransform.ScaleY"
                                      To="1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set template for crystal flat buttons. These are advanced, and greatly fade when disabled.-->
  <ControlTemplate x:Uid="ControlTemplate_1"
                   TargetType="{x:Type Button}"
                   x:Key="CrystalFlatButton">
    <!--Advanced-->
    <Grid x:Uid="Grid_1"
          ClipToBounds="{TemplateBinding ClipToBounds}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Uid="CommonStates"
                          x:Name="CommonStates">
          <VisualStateGroup.Transitions>
            <VisualTransition x:Uid="VisualTransition_1"
                              GeneratedDuration="0:0:0.5" />
            <VisualTransition x:Uid="VisualTransition_2"
                              To="Pressed"
                              GeneratedDuration="0" />
            <VisualTransition x:Uid="VisualTransition_3"
                              From="Pressed"
                              GeneratedDuration="0" />
          </VisualStateGroup.Transitions>
          <VisualState x:Uid="Normal"
                       x:Name="Normal" />
          <VisualState x:Uid="Disabled"
                       x:Name="Disabled">
            <Storyboard x:Uid="Storyboard_1">
              <DoubleAnimation x:Uid="DoubleAnimation_1"
                               Storyboard.TargetProperty="Opacity"
                               To="0.3" />
            </Storyboard>
          </VisualState>

        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Uid="Background"
              x:Name="Background"
              BorderBrush="{TemplateBinding BorderBrush}"
              CornerRadius="0"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}" />
      <ContentPresenter x:Uid="Content"
                        RecognizesAccessKey="True"
                        Margin="{TemplateBinding Padding}"
                        x:Name="Content"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger x:Uid="MultiTrigger_1">
        <MultiTrigger.Conditions>
          <Condition x:Uid="Condition_1"
                     Property="IsFocused"
                     Value="True" />
          <Condition x:Uid="Condition_2"
                     Property="IsKeyboardFocusWithin"
                     Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard x:Uid="focusedStoryboard"
                           x:Name="focusedStoryboard">
            <Storyboard x:Uid="Storyboard_4">
              <DoubleAnimation x:Uid="DoubleAnimation_4"
                               Storyboard.TargetName="Background"
                               Storyboard.TargetProperty="Opacity"
                               From="0.8"
                               To="0.95"
                               AutoReverse="True"
                               RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                  <QuadraticEase x:Uid="QuadraticEase_1"
                                 EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
            </Storyboard>
          </BeginStoryboard>
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <RemoveStoryboard x:Uid="RemoveStoryboard_1"
                            BeginStoryboardName="focusedStoryboard" />
        </MultiTrigger.ExitActions>
      </MultiTrigger>
      <Trigger x:Uid="Trigger_1"
               Property="IsDefaulted"
               Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard x:Uid="defaultedStoryboard"
                           x:Name="defaultedStoryboard">
            <Storyboard x:Uid="Storyboard_5">
              <DoubleAnimation x:Uid="DoubleAnimation_5"
                               Storyboard.TargetName="Background"
                               Storyboard.TargetProperty="Opacity"
                               From="0.8"
                               To="0.95"
                               AutoReverse="True"
                               RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                  <QuadraticEase x:Uid="QuadraticEase_2"
                                 EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <RemoveStoryboard x:Uid="RemoveStoryboard_2"
                            BeginStoryboardName="defaultedStoryboard" />
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource CrystalBackgroundFill2}" />
        <Setter Property="Foreground"
                Value="{DynamicResource CrystalForeground2}" />
      </Trigger>
      <Trigger Property="IsPressed"
               Value="True">
        <Setter Property="Background"
                Value="Black" />
        <Setter Property="Foreground"
                Value="{DynamicResource CrystalForeground2}" />
      </Trigger>
      <Trigger Property="IsFocused"
               Value="True">
        <Setter Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter Property="BorderThickness"
                Value="1.5" />
      </Trigger>
      <Trigger Property="IsDefaulted"
               Value="True">
        <Setter Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter Property="BorderThickness"
                Value="1.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--Set template for RepeatButtons-->
  <Style TargetType="RepeatButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_1"
                         TargetType="{x:Type RepeatButton}">
          <!--Advanced-->
          <Grid x:Uid="Grid_1"
                ClipToBounds="{TemplateBinding ClipToBounds}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="CommonStates"
                                x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_1"
                                    GeneratedDuration="0:0:0.5" />
                  <VisualTransition x:Uid="VisualTransition_2"
                                    To="Pressed"
                                    GeneratedDuration="0" />
                  <VisualTransition x:Uid="VisualTransition_3"
                                    From="Pressed"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="Normal"
                             x:Name="Normal" />
                <VisualState x:Uid="Disabled"
                             x:Name="Disabled">
                  <Storyboard x:Uid="Storyboard_1">
                    <DoubleAnimation x:Uid="DoubleAnimation_1"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.3" />
                  </Storyboard>
                </VisualState>

              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Uid="Background"
                    x:Name="Background"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="0"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <ContentPresenter x:Uid="Content"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              x:Name="Content"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger x:Uid="MultiTrigger_1">
              <MultiTrigger.Conditions>
                <Condition x:Uid="Condition_1"
                           Property="IsFocused"
                           Value="True" />
                <Condition x:Uid="Condition_2"
                           Property="IsKeyboardFocusWithin"
                           Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Uid="focusedStoryboard"
                                 x:Name="focusedStoryboard">
                  <Storyboard x:Uid="Storyboard_4">
                    <DoubleAnimation x:Uid="DoubleAnimation_4"
                                     Storyboard.TargetName="Background"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0.8"
                                     To="0.95"
                                     AutoReverse="True"
                                     RepeatBehavior="Forever">
                      <DoubleAnimation.EasingFunction>
                        <QuadraticEase x:Uid="QuadraticEase_1"
                                       EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <RemoveStoryboard x:Uid="RemoveStoryboard_1"
                                  BeginStoryboardName="focusedStoryboard" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter Property="Foreground"
                      Value="{DynamicResource CrystalForeground2}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
              <Setter Property="Background"
                      Value="Black" />
              <Setter Property="Foreground"
                      Value="{DynamicResource CrystalForeground2}" />
            </Trigger>
            <Trigger Property="IsFocused"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{DynamicResource CrystalBorder2}" />
              <Setter Property="BorderThickness"
                      Value="1.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate TargetType="{x:Type RepeatButton}"
                   x:Key="CrystalRepeatButton">
    <Viewbox>
      <Border Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
        <ContentPresenter RecognizesAccessKey="True"
                          Margin="{TemplateBinding Margin}"
                          x:Name="Content"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Border>
    </Viewbox>
    <ControlTemplate.Triggers>

      <!--While the mouse hovers over the button, the opacity will increase.-->
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Foreground"
                Value="LightGray" />
      </Trigger>

      <!--Change the background color when the button is pressed.-->
      <Trigger Property="IsPressed"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource CrystalBackgroundFill2}" />
      </Trigger>

    </ControlTemplate.Triggers>
  </ControlTemplate>


  <!--Set properties for crystal buttons. These buttons feature a fair amount of padding
	and the advanced template. These settings can be overridden, however.-->
  <Style x:Uid="Style_3"
         TargetType="{x:Type Button}">
    <Setter x:Uid="Setter_10"
            Property="Content"
            Value="Button" />
    <Setter x:Uid="Setter_11"
            Property="Template"
            Value="{DynamicResource CrystalFlatButton}" />
    <Setter x:Uid="Setter_12"
            Property="Background"
            Value="White" />
    <Setter x:Uid="Setter_13"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter x:Uid="Setter_14"
            Property="BorderThickness"
            Value="{DynamicResource CrystalBorderThickness2}" />
    <Setter x:Uid="Setter_15"
            Property="Margin"
            Value="1" />
    <Setter x:Uid="Setter_16"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_17"
            Property="Padding"
            Value="10, 3" />
  </Style>

  <!--Set properties for buttons of a finite size. Just like the standard button style, these settings can be overridden.-->
  <Style x:Uid="Style_4"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource {x:Type Button}}"
         x:Key="CrystalDialogButton">
    <Setter x:Uid="Setter_18"
            Property="Width"
            Value="90" />
    <Setter x:Uid="Setter_19"
            Property="Height"
            Value="24" />
    <Setter Property="Margin"
            Value="2.5,0" />
    <Setter Property="Template"
            Value="{DynamicResource CrystalAdvancedButton}" />
  </Style>

  <!--Set properties for close buttons.-->
  <Style TargetType="{x:Type Button}"
		   BasedOn="{StaticResource {x:Type Button}}"
		   x:Key="CloseButton">
    <Setter Property="Background"
				Value="DarkRed" />
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Template" Value="{DynamicResource CrystalFlatButton}"/>
  </Style>

  <!--Set properties for crystal modern bar buttons. These have a flat border on the bottom, and are useful
	 when one wants to dock the buttons on the edge.-->
  <Style TargetType="{x:Type Button}"
		   x:Key="CrystalModernBarButton"
		   BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="BorderBrush"
				Value="{StaticResource CrystalBorder2}" />
    <Setter Property="BorderThickness"
				Value="{DynamicResource CrystalBorderThickness2}" />
    <Setter Property="Width"
				Value="Auto" />
    <Setter Property="Background"
				Value="{StaticResource CrystalBackgroundFill2}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <!--Basic-->
          <Grid ClipToBounds="{TemplateBinding ClipToBounds}">
            <Grid.RowDefinitions>

              <RowDefinition Height="Auto"
										   x:Name="TopBarRowDefinition" />
              <RowDefinition x:Name="MainRowDefinition" />
              <RowDefinition Height="Auto"
										   x:Name="BottomBarRowDefinition" />
            </Grid.RowDefinitions>
            <ContentPresenter RecognizesAccessKey="True"
										  Grid.Row="1"
										  Margin="{TemplateBinding Padding}"
										  x:Name="Content"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Border x:Name="Background"
								Height="8"
								Grid.Row="0"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}" />
          </Grid>
          <ControlTemplate.Triggers>
            <!--If the button is disabled, it will disappear-->
            <Trigger Property="IsEnabled"
								 Value="False">
              <Setter Property="Visibility"
									Value="Collapsed" />
            </Trigger>

            <!--While the button is pressed, it's size will be reduced, in addition to a beautiful drop shadow.-->
            <Trigger Property="IsPressed"
								 Value="True">
              <Setter Property="Effect">
                <Setter.Value>
                  <DropShadowEffect Color="{TemplateBinding Background}"
													  ShadowDepth="0.5" />
                </Setter.Value>
              </Setter>
              <Setter Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX=".95"
													ScaleY=".95" />
                </Setter.Value>
              </Setter>
            </Trigger>

            <!--While the mouse hovers over the button, the background will slowly fade.-->
            <Trigger Property="IsMouseOver"
								 Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="HoverStoryboard">
                  <Storyboard Storyboard.TargetName="Background"
												Storyboard.TargetProperty="Opacity">
                    <DoubleAnimation From="1"
														 To="0.4"
														 Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>

              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="RemoveHoverStoryboard">
                  <Storyboard Storyboard.TargetName="Background"
												Storyboard.TargetProperty="Opacity">
                    <DoubleAnimation From="0.4"
														 To="1"
														 Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>

              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for CalendarButtons-->
  <Style x:Uid="Style_7"
         TargetType="{x:Type CalendarButton}"
         x:Key="CrystalCButton">
    <Setter x:Uid="Setter_29"
            Property="MinWidth"
            Value="40" />
    <Setter x:Uid="Setter_30"
            Property="MinHeight"
            Value="50" />
    <Setter x:Uid="Setter_31"
            Property="FontSize"
            Value="10" />
    <Setter x:Uid="Setter_32"
            Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter x:Uid="Setter_33"
            Property="VerticalContentAlignment"
            Value="Center" />
    <Setter x:Uid="Setter_34"
            Property="BorderBrush"
            Value="{StaticResource CrystalBorder}" />
    <Setter x:Uid="Setter_35"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_36"
            Property="BorderThickness"
            Value="1,1,1,1" />
    <Setter x:Uid="Setter_37"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_7"
                         TargetType="{x:Type CalendarButton}">
          <Grid x:Uid="Grid_5">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="VisualStateGroup_4"
                                x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_10"
                                    GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_9"
                             x:Name="Normal" />
                <VisualState x:Uid="VisualState_10"
                             x:Name="MouseOver">
                  <Storyboard x:Uid="Storyboard_16">
                    <DoubleAnimation x:Uid="DoubleAnimation_18"
                                     Duration="0"
                                     To=".5"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Uid="VisualState_11"
                             x:Name="Pressed">
                  <Storyboard x:Uid="Storyboard_17">
                    <DoubleAnimation x:Uid="DoubleAnimation_19"
                                     Duration="0"
                                     To=".5"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="Background" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="SelectionStates"
                                x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_11"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="Unselected"
                             x:Name="Unselected" />
                <VisualState x:Uid="Selected"
                             x:Name="Selected">
                  <Storyboard x:Uid="Storyboard_18">
                    <DoubleAnimation x:Uid="DoubleAnimation_20"
                                     Duration="0"
                                     To=".75"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="SelectedBackground" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="ActiveStates"
                                x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_12"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="Active"
                             x:Name="Active" />
                <VisualState x:Uid="Inactive"
                             x:Name="Inactive">
                  <Storyboard x:Uid="Storyboard_19">
                    <ColorAnimation x:Uid="ColorAnimation_3"
                                    Duration="0"
                                    To="LightGray"
                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                    Storyboard.TargetName="NormalText" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="CalendarButtonFocusStates"
                                x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_13"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="CalendarButtonFocused"
                             x:Name="CalendarButtonFocused">
                  <Storyboard x:Uid="Storyboard_20">
                    <ObjectAnimationUsingKeyFrames x:Uid="ObjectAnimationUsingKeyFrames_1"
                                                   Duration="0"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame x:Uid="DiscreteObjectKeyFrame_1"
                                              KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Uid="CalendarButtonUnfocused"
                             x:Name="CalendarButtonUnfocused">
                  <Storyboard x:Uid="Storyboard_21">
                    <ObjectAnimationUsingKeyFrames x:Uid="ObjectAnimationUsingKeyFrames_2"
                                                   Duration="0"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame x:Uid="DiscreteObjectKeyFrame_2"
                                              KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Uid="Border_6"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <Rectangle x:Uid="SelectedBackground"
                       x:Name="SelectedBackground"
                       Fill="{StaticResource CrystalBackgroundFill2}"
                       Stroke="{StaticResource CrystalBorder2}"
                       StrokeThickness="1"
                       Opacity="0" />
            <Rectangle x:Uid="Rectangle_1"
                       x:Name="Background"
                       Fill="{StaticResource CrystalBorder}"
                       Opacity="0" />
            <ContentPresenter x:Uid="NormalText"
                              x:Name="NormalText"
                              TextElement.Foreground="{DynamicResource CrystalForeground2}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="1,0,1,1"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Rectangle x:Uid="CalendarButtonFocusVisual"
                       x:Name="CalendarButtonFocusVisual"
                       IsHitTestVisible="false"
                       Stroke="#FF45D6FA"
                       Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_11"
                     Property="IsFocused"
                     Value="True">
              <Setter x:Uid="Setter_38"
                      Property="Visibility"
                      TargetName="CalendarButtonFocusVisual"
                      Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for CalendarDayButtons-->
  <SolidColorBrush x:Uid="SolidColorBrush_16"
                   x:Key="NormalBrush"
                   Color="White" />
  <Style x:Uid="Style_8"
         TargetType="{x:Type CalendarDayButton}"
         x:Key="CrystalCDayButton">
    <Setter x:Uid="Setter_39"
            Property="MinWidth"
            Value="20" />
    <Setter x:Uid="Setter_40"
            Property="MinHeight"
            Value="20" />
    <Setter x:Uid="Setter_41"
            Property="FontSize"
            Value="10" />
    <Setter x:Uid="Setter_42"
            Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter x:Uid="Setter_43"
            Property="VerticalContentAlignment"
            Value="Center" />
    <Setter x:Uid="Setter_44"
            Property="BorderBrush"
            Value="{StaticResource CrystalBorder}" />
    <Setter x:Uid="Setter_45"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_46"
            Property="BorderThickness"
            Value="1,1,1,1" />
    <Setter x:Uid="Setter_47"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_8"
                         TargetType="{x:Type CalendarDayButton}">
          <Grid x:Uid="Grid_6">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="VisualStateGroup_5"
                                x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_14"
                                    GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_12"
                             x:Name="Normal" />
                <VisualState x:Uid="VisualState_13"
                             x:Name="MouseOver">
                  <Storyboard x:Uid="Storyboard_22">
                    <DoubleAnimation x:Uid="DoubleAnimation_21"
                                     Duration="0"
                                     To="0.5"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="HighlightBackground" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Uid="VisualState_14"
                             x:Name="Pressed">
                  <Storyboard x:Uid="Storyboard_23">
                    <DoubleAnimation x:Uid="DoubleAnimation_22"
                                     Duration="0"
                                     To="0.5"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="HighlightBackground" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Uid="VisualState_15"
                             x:Name="Disabled">
                  <Storyboard x:Uid="Storyboard_24">
                    <DoubleAnimation x:Uid="DoubleAnimation_23"
                                     Duration="0"
                                     To="0"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="HighlightBackground" />
                    <DoubleAnimation x:Uid="DoubleAnimation_24"
                                     Duration="0"
                                     To=".35"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="NormalText" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="VisualStateGroup_6"
                                x:Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_15"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_16"
                             x:Name="Unselected" />
                <VisualState x:Uid="VisualState_17"
                             x:Name="Selected">
                  <Storyboard x:Uid="Storyboard_25">
                    <DoubleAnimation x:Uid="DoubleAnimation_25"
                                     Duration="0"
                                     To=".75"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="SelectedBackground" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="VisualStateGroup_7"
                                x:Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_16"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_18"
                             x:Name="CalendarButtonFocused">
                  <Storyboard x:Uid="Storyboard_26">
                    <ObjectAnimationUsingKeyFrames x:Uid="ObjectAnimationUsingKeyFrames_3"
                                                   Duration="0"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Storyboard.TargetName="DayButtonFocusVisual">
                      <DiscreteObjectKeyFrame x:Uid="DiscreteObjectKeyFrame_3"
                                              KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Uid="VisualState_19"
                             x:Name="CalendarButtonUnfocused">
                  <Storyboard x:Uid="Storyboard_27">
                    <ObjectAnimationUsingKeyFrames x:Uid="ObjectAnimationUsingKeyFrames_4"
                                                   Duration="0"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Storyboard.TargetName="DayButtonFocusVisual">
                      <DiscreteObjectKeyFrame x:Uid="DiscreteObjectKeyFrame_4"
                                              KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="VisualStateGroup_8"
                                x:Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_17"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_20"
                             x:Name="Active" />
                <VisualState x:Uid="VisualState_21"
                             x:Name="Inactive">
                  <Storyboard x:Uid="Storyboard_28">
                    <DoubleAnimation x:Uid="DoubleAnimation_26"
                                     Duration="0"
                                     To="1"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="InactiveBackground" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="DayStates"
                                x:Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_18"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="RegularDay"
                             x:Name="RegularDay" />
                <VisualState x:Uid="Today"
                             x:Name="Today">
                  <Storyboard x:Uid="Storyboard_29">
                    <DoubleAnimation x:Uid="DoubleAnimation_27"
                                     Duration="0"
                                     To="1"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="TodayBackground" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Uid="BlackoutDayStates"
                                x:Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_19"
                                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="NormalDay"
                             x:Name="NormalDay" />
                <VisualState x:Uid="BlackoutDay"
                             x:Name="BlackoutDay">
                  <Storyboard x:Uid="Storyboard_30">
                    <DoubleAnimation x:Uid="DoubleAnimation_28"
                                     Duration="0"
                                     To=".2"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="Blackout" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Uid="TodayBackground"
                  x:Name="TodayBackground"
                  Panel.ZIndex="1"
                  HorizontalAlignment="Right"
                  StrokeThickness="1"
                  Fill="{StaticResource NormalBrush}"
                  Opacity="0"
                  Data="M 0,0 L 8,8 L 8,0 z" />
            <Rectangle x:Uid="Rectangle_2"
                       x:Name="SelectedBackground"
                       Fill="{StaticResource CrystalBackgroundFill2}"
                       Stroke="{StaticResource CrystalBorder2}"
                       StrokeThickness="1"
                       Opacity="0" />
            <Border x:Uid="Border_7"
                    x:Name="Background"
                    Panel.ZIndex="2"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <Rectangle x:Uid="HighlightBackground"
                       x:Name="HighlightBackground"
                       Fill="{StaticResource CrystalBorder}"
                       Opacity="0" />
            <Rectangle x:Uid="InactiveBackground"
                       x:Name="InactiveBackground"
                       Fill="#FFACACAC"
                       Margin="1"
                       Opacity="0" />
            <ContentPresenter x:Uid="ContentPresenter_6"
                              x:Name="NormalText"
                              TextElement.Foreground="{DynamicResource CrystalForeground2}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="5"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Path x:Uid="Blackout"
                  x:Name="Blackout"
                  Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                  Fill="#FF000000"
                  HorizontalAlignment="Stretch"
                  Margin="3"
                  Opacity="0"
                  RenderTransformOrigin="0.5,0.5"
                  Stretch="Fill"
                  VerticalAlignment="Stretch" />
            <Rectangle x:Uid="DayButtonFocusVisual"
                       x:Name="DayButtonFocusVisual"
                       IsHitTestVisible="false"
                       Stroke="#FF45D6FA"
                       Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for Calendar Items-->
  <Color x:Uid="Color_1"
         x:Key="HoverCBrush"
         A="255"
         B="30"
         G="144"
         R="255" />
  <Color x:Uid="Color_2"
         x:Key="NormalCBrush"
         A="255"
         B="255"
         G="255"
         R="255" />
  <Style x:Uid="Style_9"
         TargetType="{x:Type CalendarItem}"
         x:Key="CrystalCalendarItem">
    <Setter x:Uid="Setter_48"
            Property="Margin"
            Value="0" />
    <Setter x:Uid="Setter_49"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_9"
                         TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate x:Uid="DataTemplate_1"
                          x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock x:Uid="TextBlock_1"
                         Foreground="White"
                         FontSize="9.5"
                         FontFamily="Calibri"
                         HorizontalAlignment="Center"
                         Margin="0,0,0,5"
                         Text="{Binding}"
                         VerticalAlignment="Center" />
            </DataTemplate>
          </ControlTemplate.Resources>
          <Grid x:Uid="PART_Root"
                x:Name="PART_Root">
            <Grid.Resources>
              <SolidColorBrush x:Uid="SolidColorBrush_17"
                               x:Key="DisabledColor"
                               Color="#A5FFFFFF" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="VisualStateGroup_9"
                                x:Name="CommonStates">
                <VisualState x:Uid="VisualState_22"
                             x:Name="Normal" />
                <VisualState x:Uid="VisualState_23"
                             x:Name="Disabled">
                  <Storyboard x:Uid="Storyboard_31">
                    <DoubleAnimation x:Uid="DoubleAnimation_29"
                                     Duration="0"
                                     To="1"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Uid="Border_8"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
              <Grid x:Uid="Grid_7">
                <Grid.Resources>
                  <ControlTemplate x:Uid="ControlTemplate_10"
                                   x:Key="PreviousButtonTemplate"
                                   TargetType="{x:Type Button}">
                    <Grid x:Uid="Grid_8">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Uid="VisualStateGroup_10"
                                          x:Name="CommonStates">
                          <VisualState x:Uid="VisualState_24"
                                       x:Name="Normal">
                            <Storyboard x:Uid="Storyboard_32">
                              <ColorAnimation x:Uid="ColorAnimation_4"
                                              Duration="0:0:0.5"
                                              To="{StaticResource NormalCBrush}"
                                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="path" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Uid="VisualState_25"
                                       x:Name="MouseOver">
                            <Storyboard x:Uid="Storyboard_33">
                              <ColorAnimation x:Uid="ColorAnimation_5"
                                              Duration="0:0:0.5"
                                              To="{StaticResource HoverCBrush}"
                                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="path" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Uid="VisualState_26"
                                       x:Name="Disabled">
                            <Storyboard x:Uid="Storyboard_34">
                              <DoubleAnimation x:Uid="DoubleAnimation_30"
                                               Duration="0"
                                               To=".5"
                                               Storyboard.TargetProperty="(Shape.Stroke).(Brush.Opacity)"
                                               Storyboard.TargetName="path" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Grid x:Uid="Grid_9">
                        <Path x:Uid="path"
                              x:Name="path"
                              Data="M 0,4 L 6,0 l 6,4"
                              Stroke="{StaticResource NormalBrush}"
                              Height="Auto"
                              Stretch="Uniform"
                              Width="Auto"
                              Fill="#00000000" />
                      </Grid>
                    </Grid>
                  </ControlTemplate>
                  <ControlTemplate x:Uid="ControlTemplate_11"
                                   x:Key="NextButtonTemplate"
                                   TargetType="{x:Type Button}">
                    <Grid x:Uid="Grid_10">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Uid="VisualStateGroup_11"
                                          x:Name="CommonStates">
                          <VisualState x:Uid="VisualState_27"
                                       x:Name="Normal">
                            <Storyboard x:Uid="Storyboard_35">
                              <ColorAnimation x:Uid="ColorAnimation_6"
                                              Duration="0:0:0.5"
                                              To="{StaticResource NormalCBrush}"
                                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="path" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Uid="VisualState_28"
                                       x:Name="MouseOver">
                            <Storyboard x:Uid="Storyboard_36">
                              <ColorAnimation x:Uid="ColorAnimation_7"
                                              Duration="0:0:0.5"
                                              To="{StaticResource HoverCBrush}"
                                              Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="path" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Uid="VisualState_29"
                                       x:Name="Disabled">
                            <Storyboard x:Uid="Storyboard_37">
                              <DoubleAnimation x:Uid="DoubleAnimation_31"
                                               Duration="0"
                                               To=".5"
                                               Storyboard.TargetProperty="(Shape.Stroke).(Brush.Opacity)"
                                               Storyboard.TargetName="path" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Grid x:Uid="Grid_11">
                        <Path x:Uid="Path_1"
                              x:Name="path"
                              Data="M 0,4 L 6,0 l 6,4"
                              Stroke="{StaticResource NormalBrush}"
                              Height="Auto"
                              Stretch="Uniform"
                              Width="Auto"
                              Fill="#00000000">
                          <Path.LayoutTransform>
                            <RotateTransform x:Uid="RotateTransform_1"
                                             Angle="180" />
                          </Path.LayoutTransform>
                        </Path>
                      </Grid>
                    </Grid>
                  </ControlTemplate>
                  <ControlTemplate x:Uid="ControlTemplate_12"
                                   x:Key="HeaderButtonTemplate"
                                   TargetType="{x:Type Button}">
                    <Grid x:Uid="Grid_12">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Uid="VisualStateGroup_12"
                                          x:Name="CommonStates">
                          <VisualState x:Uid="VisualState_30"
                                       x:Name="Normal">
                            <Storyboard x:Uid="Storyboard_38">
                              <ColorAnimation x:Uid="ColorAnimation_8"
                                              Duration="0:0:0.5"
                                              To="{StaticResource NormalCBrush}"
                                              Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="buttonContent" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Uid="VisualState_31"
                                       x:Name="MouseOver">
                            <Storyboard x:Uid="Storyboard_39">
                              <ColorAnimation x:Uid="ColorAnimation_9"
                                              Duration="0:0:0.5"
                                              To="{StaticResource HoverCBrush}"
                                              Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="buttonContent" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Uid="VisualState_32"
                                       x:Name="Disabled">
                            <Storyboard x:Uid="Storyboard_40">
                              <DoubleAnimation x:Uid="DoubleAnimation_32"
                                               Duration="0"
                                               To=".5"
                                               Storyboard.TargetProperty="Opacity"
                                               Storyboard.TargetName="buttonContent" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <ContentPresenter x:Uid="buttonContent"
                                        x:Name="buttonContent"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        TextElement.Foreground="{StaticResource NormalBrush}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="1,4,1,9"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                  </ControlTemplate>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Uid="ColumnDefinition_1" />
                  <ColumnDefinition x:Uid="ColumnDefinition_2"
                                    Width="Auto" />
                  <ColumnDefinition x:Uid="ColumnDefinition_3"
                                    Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition x:Uid="RowDefinition_1"
                                 Height="Auto" />
                  <RowDefinition x:Uid="RowDefinition_2"
                                 Height="*" />
                </Grid.RowDefinitions>
                <Button x:Uid="PART_HeaderButton"
                        x:Name="PART_HeaderButton"
                        Focusable="False"
                        FontFamily="Segoe UI"
                        FontSize="10.5"
                        Margin="10,0,0,0"
                        Grid.Row="0"
                        HorizontalAlignment="Left"
                        Template="{StaticResource HeaderButtonTemplate}"
                        VerticalAlignment="Center" />
                <Button x:Uid="PART_PreviousButton"
                        x:Name="PART_PreviousButton"
                        Grid.Column="1"
                        Focusable="False"
                        ToolTip="Previous"
                        Height="10"
                        Grid.Row="0"
                        Template="{StaticResource PreviousButtonTemplate}"
                        Width="15" />
                <Button x:Uid="PART_NextButton"
                        x:Name="PART_NextButton"
                        Grid.Column="2"
                        Margin="0,0,5,0"
                        ToolTip="Next"
                        Focusable="False"
                        Height="10"
                        Grid.Row="0"
                        Template="{StaticResource NextButtonTemplate}"
                        Width="15" />
                <Grid x:Uid="PART_MonthView"
                      x:Name="PART_MonthView"
                      Grid.ColumnSpan="3"
                      HorizontalAlignment="Center"
                      Margin="0,0,0,5"
                      Grid.Row="1"
                      Visibility="Visible">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_4"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_5"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_6"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_7"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_8"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_9"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_10"
                                      Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition x:Uid="RowDefinition_3"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_4"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_5"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_6"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_7"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_8"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_9"
                                   Height="Auto" />
                  </Grid.RowDefinitions>
                </Grid>
                <Grid x:Uid="PART_YearView"
                      x:Name="PART_YearView"
                      Grid.ColumnSpan="3"
                      HorizontalAlignment="Center"
                      Margin="0,0,0,5"
                      Grid.Row="1"
                      Visibility="Hidden">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_11"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_12"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_13"
                                      Width="Auto" />
                    <ColumnDefinition x:Uid="ColumnDefinition_14"
                                      Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition x:Uid="RowDefinition_10"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_11"
                                   Height="Auto" />
                    <RowDefinition x:Uid="RowDefinition_12"
                                   Height="Auto" />
                  </Grid.RowDefinitions>
                </Grid>
              </Grid>
            </Border>
            <Rectangle x:Uid="PART_DisabledVisual"
                       x:Name="PART_DisabledVisual"
                       Fill="{StaticResource DisabledColor}"
                       Opacity="0"
                       Stretch="Fill"
                       Stroke="{StaticResource DisabledColor}"
                       StrokeThickness="1"
                       Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_12"
                     Property="IsEnabled"
                     Value="False">
              <Setter x:Uid="Setter_50"
                      Property="Visibility"
                      TargetName="PART_DisabledVisual"
                      Value="Visible" />
            </Trigger>
            <DataTrigger x:Uid="DataTrigger_1"
                         Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                         Value="Month">
              <Setter x:Uid="Setter_51"
                      Property="ToolTip"
                      TargetName="PART_HeaderButton"
                      Value="View current year" />
            </DataTrigger>
            <DataTrigger x:Uid="DataTrigger_2"
                         Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                         Value="Year">
              <Setter x:Uid="Setter_52"
                      Property="Visibility"
                      TargetName="PART_MonthView"
                      Value="Hidden" />
              <Setter x:Uid="Setter_53"
                      Property="Visibility"
                      TargetName="PART_YearView"
                      Value="Visible" />
              <Setter x:Uid="Setter_54"
                      Property="ToolTip"
                      TargetName="PART_HeaderButton"
                      Value="View current decade" />
            </DataTrigger>
            <DataTrigger x:Uid="DataTrigger_3"
                         Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                         Value="Decade">
              <Setter x:Uid="Setter_55"
                      Property="Visibility"
                      TargetName="PART_MonthView"
                      Value="Hidden" />
              <Setter x:Uid="Setter_56"
                      Property="Visibility"
                      TargetName="PART_YearView"
                      Value="Visible" />
              <Setter x:Uid="Setter_57"
                      Property="ToolTip"
                      TargetName="PART_HeaderButton"
                      Value="" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for Calendars-->
  <Style x:Uid="Style_10"
         TargetType="{x:Type Calendar}"
         x:Key="CalendarStyle">
    <Setter x:Uid="Setter_58"
            Property="Foreground"
            Value="#FF333333" />
    <Setter x:Uid="Setter_59"
            Property="CalendarItemStyle"
            Value="{DynamicResource CrystalCalendarItem}" />
    <Setter x:Uid="Setter_60"
            Property="CalendarDayButtonStyle"
            Value="{DynamicResource CrystalCDayButton}" />
    <Setter x:Uid="Setter_61"
            Property="CalendarButtonStyle"
            Value="{DynamicResource CrystalCButton}" />
    <Setter x:Uid="Setter_62"
            Property="BorderBrush"
            Value="{StaticResource CrystalBorder}" />
    <Setter x:Uid="Setter_63"
            Property="Background"
            Value="{StaticResource CrystalBackgroundFill}" />
    <Setter x:Uid="Setter_64"
            Property="BorderThickness"
            Value="1" />
    <Setter x:Uid="Setter_65"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_13"
                         TargetType="{x:Type Calendar}">
          <StackPanel x:Uid="StackPanel_1"
                      x:Name="PART_Root"
                      HorizontalAlignment="Center">
            <CalendarItem x:Uid="PART_CalendarItem"
                          x:Name="PART_CalendarItem"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Style="{TemplateBinding CalendarItemStyle}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for CheckBoxes-->
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2"
							   SnapsToDevicePixels="true"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeThickness="1"
							   StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OptionMarkFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0"
							   SnapsToDevicePixels="true"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeThickness="1"
							   StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.Static.Background"
					 Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="OptionMark.Static.Border"
					 Color="DodgerBlue" />
  <SolidColorBrush x:Key="OptionMark.Static.Glyph"
					 Color="#FF212121" />
  <SolidColorBrush x:Key="OptionMark.MouseOver.Background"
					 Color="#FFF3F9FF" />
  <SolidColorBrush x:Key="OptionMark.MouseOver.Border"
					 Color="#FF5593FF" />
  <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
					 Color="#FF212121" />
  <SolidColorBrush x:Key="OptionMark.Pressed.Background"
					 Color="#FFD9ECFF" />
  <SolidColorBrush x:Key="OptionMark.Pressed.Border"
					 Color="#FF3C77DD" />
  <SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
					 Color="#FF212121" />
  <SolidColorBrush x:Key="OptionMark.Disabled.Background"
					 Color="#FFE6E6E6" />
  <SolidColorBrush x:Key="OptionMark.Disabled.Border"
					 Color="#FFBCBCBC" />
  <SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
					 Color="#FF707070" />
  <Style TargetType="{x:Type CheckBox}">
    <Setter Property="Margin"
				Value="1" />
    <Setter Property="FocusVisualStyle"
				Value="{StaticResource FocusVisual}" />
    <Setter Property="Background"
				Value="{StaticResource OptionMark.Static.Background}" />
    <Setter Property="VerticalContentAlignment"
				Value="Center" />
    <Setter Property="BorderBrush"
				Value="{StaticResource OptionMark.Static.Border}" />
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalForeground2}" />
    <Setter Property="BorderThickness"
				Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid x:Name="templateRoot"
						  SnapsToDevicePixels="True"
						  Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="checkBoxBorder"
								Margin="1"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}">
              <Grid x:Name="markGrid">
                <Path x:Name="optionMark"
									  Opacity="0"
									  Stretch="None"
									  Margin="1"
									  Fill="{StaticResource OptionMark.Static.Glyph}"
									  Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " />
                <Rectangle x:Name="indeterminateMark"
										   Margin="2"
										   Opacity="0"
										   Fill="{StaticResource OptionMark.Static.Glyph}" />
              </Grid>
            </Border>
            <ContentPresenter x:Name="contentPresenter"
										  RecognizesAccessKey="True"
										  Grid.Column="1"
										  Margin="{TemplateBinding Padding}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Focusable="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasContent"
								 Value="true">
              <Setter Property="FocusVisualStyle"
									Value="{StaticResource OptionMarkFocusVisual}" />
              <Setter Property="Padding"
									Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver"
								 Value="true">
              <Setter Property="Background"
									Value="{StaticResource OptionMark.MouseOver.Background}"
									TargetName="checkBoxBorder" />
              <Setter Property="BorderBrush"
									Value="{StaticResource OptionMark.MouseOver.Border}"
									TargetName="checkBoxBorder" />
              <Setter Property="Fill"
									Value="{StaticResource OptionMark.MouseOver.Glyph}"
									TargetName="optionMark" />
              <Setter Property="Fill"
									Value="{StaticResource OptionMark.MouseOver.Glyph}"
									TargetName="indeterminateMark" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Background"
									Value="{StaticResource OptionMark.Disabled.Background}"
									TargetName="checkBoxBorder" />
              <Setter Property="BorderBrush"
									Value="{StaticResource OptionMark.Disabled.Border}"
									TargetName="checkBoxBorder" />
              <Setter Property="Fill"
									Value="{StaticResource OptionMark.Disabled.Glyph}"
									TargetName="optionMark" />
              <Setter Property="Fill"
									Value="{StaticResource OptionMark.Disabled.Glyph}"
									TargetName="indeterminateMark" />
            </Trigger>
            <Trigger Property="IsPressed"
								 Value="true">
              <Setter Property="Background"
									Value="{StaticResource OptionMark.Pressed.Background}"
									TargetName="checkBoxBorder" />
              <Setter Property="BorderBrush"
									Value="{StaticResource OptionMark.Pressed.Border}"
									TargetName="checkBoxBorder" />
              <Setter Property="Fill"
									Value="{StaticResource OptionMark.Pressed.Glyph}"
									TargetName="optionMark" />
              <Setter Property="Fill"
									Value="{StaticResource OptionMark.Pressed.Glyph}"
									TargetName="indeterminateMark" />
            </Trigger>
            <Trigger Property="IsChecked"
								 Value="true">
              <Setter Property="Opacity"
									Value="1"
									TargetName="optionMark" />
              <Setter Property="Opacity"
									Value="0"
									TargetName="indeterminateMark" />
            </Trigger>
            <Trigger Property="IsChecked"
								 Value="{x:Null}">
              <Setter Property="Opacity"
									Value="0"
									TargetName="optionMark" />
              <Setter Property="Opacity"
									Value="1"
									TargetName="indeterminateMark" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for ComboBoxItems-->
  <Style x:Uid="Style_39"
         TargetType="{x:Type ComboBoxItem}">
    <Setter x:Uid="Setter_292"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_295"
            Property="BorderThickness"
            Value="1" />
    <Setter x:Uid="Setter_296"
            Property="Padding"
            Value="5" />
    <Setter x:Uid="Setter_297"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_36"
                         TargetType="{x:Type ComboBoxItem}">
          <Grid x:Uid="Grid_28"
                ClipToBounds="{TemplateBinding ClipToBounds}"
                MinHeight="15">
            <Border x:Uid="Border_22"
                    x:Name="Background"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <ContentPresenter x:Uid="ContentPresenter_16"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              x:Name="Content"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>

            <!--Produce a nice hover animation and effect when hovering over an item.-->
            <Trigger x:Uid="Trigger_60"
                     Property="IsMouseOver"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{DynamicResource CrystalBorder2}" />
              <Setter Property="BorderThickness"
                      Value="1" />
            </Trigger>

            <!--When an item is selected, make it blue.-->
            <Trigger x:Uid="Trigger_61"
                     Property="IsSelected"
                     Value="True">
              <Setter x:Uid="Setter_298"
                      Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter Property="Foreground"
                      Value="White" />

            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>

      </Setter.Value>
    </Setter>


  </Style>

  <!--Set properties for ComboBoxes-->
  <Style x:Uid="Style_15"
         TargetType="{x:Type ComboBox}">
    <Setter x:Uid="Setter_101"
            Property="Margin"
            Value="1" />
    <Setter x:Uid="Setter_102"
            Property="FocusVisualStyle">
      <Setter.Value>
        <Style x:Uid="Style_16">
          <Setter x:Uid="Setter_103"
                  Property="Control.Template">
            <Setter.Value>
              <ControlTemplate x:Uid="ControlTemplate_18">
                <Rectangle x:Uid="Rectangle_5"
                           Margin="2,2,12,2"
                           SnapsToDevicePixels="True"
                           Stroke="White"
                           StrokeThickness="2"
                           StrokeDashArray="1 2"
                           Fill="Transparent" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>

    <Setter Property="Background"
            Value="White" />
    <Setter x:Uid="Setter_106"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_107"
            Property="BorderThickness"
            Value="{DynamicResource CrystalBorderThickness2}" />
    <Setter x:Uid="Setter_108"
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
    <Setter x:Uid="Setter_109"
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
    <Setter x:Uid="Setter_110"
            Property="Padding"
            Value="4,3" />
    <Setter x:Uid="Setter_111"
            Property="ScrollViewer.CanContentScroll"
            Value="True" />
    <Setter x:Uid="Setter_112"
            Property="ScrollViewer.PanningMode"
            Value="Both" />
    <Setter x:Uid="Setter_113"
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
    <Setter x:Uid="Setter_114"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_19"
                         TargetType="{x:Type ComboBox}">
          <Grid x:Uid="Grid_14"
                x:Name="MainGrid"
                SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Uid="ColumnDefinition_17"
                                Width="*" />
              <ColumnDefinition x:Uid="ColumnDefinition_18"
                                MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Uid="PART_Popup"
                   x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1"
                   PopupAnimation="Slide"
                   Placement="Bottom">
              <Border x:Uid="DropDownBorder"
                      x:Name="DropDownBorder"
                      BorderBrush="LightGray"
                      BorderThickness="1"
                      Background="White">
                <ScrollViewer x:Uid="DropDownScrollViewer"
                              x:Name="DropDownScrollViewer">
                  <Grid x:Uid="Grid_15"
                        RenderOptions.ClearTypeHint="Enabled">
                    <Canvas x:Uid="Canvas_1"
                            HorizontalAlignment="Left"
                            Height="0"
                            VerticalAlignment="Top"
                            Width="0">
                      <Rectangle x:Uid="OpaqueRect"
                                 x:Name="OpaqueRect"
                                 Fill="{Binding Background, ElementName=DropDownBorder}"
                                 Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                 Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                    </Canvas>
                    <ItemsPresenter x:Uid="ItemsPresenter"
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </Grid>
                </ScrollViewer>
              </Border>
            </Popup>
            <ToggleButton x:Uid="ToggleButton_1"
                          x:Name="toggle"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
              <ToggleButton.Style>
                <Style x:Uid="Style_17"
                       TargetType="{x:Type ToggleButton}">
                  <Setter x:Uid="Setter_115"
                          Property="OverridesDefaultStyle"
                          Value="True" />
                  <Setter x:Uid="Setter_116"
                          Property="IsTabStop"
                          Value="False" />
                  <Setter x:Uid="Setter_117"
                          Property="Focusable"
                          Value="False" />
                  <Setter x:Uid="Setter_118"
                          Property="ClickMode"
                          Value="Press" />
                  <Setter x:Uid="Setter_119"
                          Property="Background"
                          Value="Transparent" />
                  <Setter x:Uid="Setter_120"
                          Property="Template">
                    <Setter.Value>
                      <ControlTemplate x:Uid="ControlTemplate_20"
                                       TargetType="{x:Type ToggleButton}">
                        <Border x:Uid="Chrome"
                                x:Name="Chrome"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="VisualStateGroup_13"
                                              x:Name="CommonStates">
                              <VisualStateGroup.Transitions>
                                <VisualTransition x:Uid="VisualTransition_20"
                                                  GeneratedDuration="0:0:0.5" />
                              </VisualStateGroup.Transitions>
                              <VisualState x:Uid="VisualState_33"
                                           x:Name="Normal" />
                              <VisualState x:Uid="VisualState_34"
                                           x:Name="Disabled">
                                <Storyboard x:Uid="Storyboard_43">
                                  <DoubleAnimation x:Uid="DoubleAnimation_35"
                                                   Storyboard.TargetProperty="Opacity"
                                                   To="0.3" />
                                  <ColorAnimation x:Uid="ColorAnimation_10"
                                                  Storyboard.TargetName="Arrow"
                                                  Storyboard.TargetProperty="Fill"
                                                  To="#FFAFAFAF" />
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Uid="VisualStateGroup_14"
                                              x:Name="FocusStates">
                              <VisualState x:Uid="VisualState_36"
                                           x:Name="Unfocused" />
                              <VisualState x:Uid="VisualState_37"
                                           x:Name="Focused">
                                <Storyboard x:Uid="Storyboard_45">
                                  <DoubleAnimation x:Uid="DoubleAnimation_38"
                                                   Storyboard.TargetName="Chrome"
                                                   Storyboard.TargetProperty="Opacity"
                                                   From="0.8"
                                                   To="0.95"
                                                   AutoReverse="True"
                                                   RepeatBehavior="Forever">
                                    <DoubleAnimation.EasingFunction>
                                      <QuadraticEase x:Uid="QuadraticEase_5"
                                                     EasingMode="EaseInOut" />
                                    </DoubleAnimation.EasingFunction>
                                  </DoubleAnimation>
                                </Storyboard>
                              </VisualState>
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>
                          <Grid x:Uid="Grid_16"
                                HorizontalAlignment="Right"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Uid="Arrow"
                                  x:Name="Arrow"
                                  Data="M0,0L3.5,4 7,0z"
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  Margin="3,1,0,0"
                                  VerticalAlignment="Center" />
                          </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger x:Uid="Trigger_21"
                                   Property="IsChecked"
                                   Value="True">
                            <Setter x:Uid="Setter_121"
                                    Property="Effect"
                                    TargetName="Arrow">
                              <Setter.Value>
                                <BlurEffect x:Uid="BlurEffect_1" />
                              </Setter.Value>
                            </Setter>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ToggleButton.Style>

            </ToggleButton>
            <ContentPresenter x:Uid="ContentPresenter_8"
                              x:Name="content"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="False"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter TargetName="toggle"
                      Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter TargetName="content"
                      Property="TextElement.Foreground"
                      Value="{DynamicResource CrystalForeground2}" />
            </Trigger>
            <Trigger x:Uid="Trigger_22"
                     Property="HasItems"
                     Value="False">
              <Setter x:Uid="Setter_122"
                      Property="Height"
                      TargetName="DropDownBorder"
                      Value="95" />
            </Trigger>
            <Trigger x:Uid="Trigger_23"
                     Property="IsEnabled"
                     Value="False">
              <Setter x:Uid="Setter_123"
                      Property="Foreground"
                      Value="Gray" />
              <Setter x:Uid="Setter_124"
                      Property="Opacity"
                      Value="0.3" />
            </Trigger>
            <Trigger x:Uid="Trigger_25"
                     Property="CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="False">
              <Setter x:Uid="Setter_127"
                      Property="Canvas.Top"
                      TargetName="OpaqueRect"
                      Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
              <Setter x:Uid="Setter_128"
                      Property="Canvas.Left"
                      TargetName="OpaqueRect"
                      Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger x:Uid="Trigger_26"
               Property="IsEditable"
               Value="True">
        <Setter x:Uid="Setter_129"
                Property="Background"
                Value="{DynamicResource CrystalBackgroundFill2}" />
        <Setter x:Uid="Setter_130"
                Property="BorderBrush"
                Value="{DynamicResource CrystalBorder2}" />
        <Setter x:Uid="Setter_131"
                Property="BorderThickness"
                Value="{DynamicResource CrystalBorderThickness2}" />
        <Setter x:Uid="Setter_132"
                Property="IsTabStop"
                Value="False" />
        <Setter x:Uid="Setter_133"
                Property="Padding"
                Value="3" />
        <Setter x:Uid="Setter_134"
                Property="Template">
          <Setter.Value>
            <ControlTemplate x:Uid="ControlTemplate_21"
                             TargetType="{x:Type ComboBox}">
              <Grid x:Uid="Placement"
                    x:Name="Placement"
                    SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Uid="ColumnDefinition_19"
                                    Width="*" />
                  <ColumnDefinition x:Uid="ColumnDefinition_20"
                                    Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Uid="Popup_1"
                       x:Name="PART_Popup"
                       AllowsTransparency="True"
                       Grid.ColumnSpan="2"
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="Slide"
                       Placement="Bottom">
                  <Themes:SystemDropShadowChrome x:Uid="Themes:SystemDropShadowChrome_1"
                                                 x:Name="Shdw"
                                                 Color="Transparent"
                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                 MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Uid="Border_10"
                            x:Name="DropDownBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}">
                      <ScrollViewer x:Uid="ScrollViewer_1"
                                    x:Name="DropDownScrollViewer">
                        <Grid x:Uid="Grid_17"
                              RenderOptions.ClearTypeHint="Enabled">
                          <Canvas x:Uid="Canvas_2"
                                  HorizontalAlignment="Left"
                                  Height="0"
                                  VerticalAlignment="Top"
                                  Width="0">
                            <Rectangle x:Uid="Rectangle_6"
                                       x:Name="OpaqueRect"
                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                          </Canvas>
                          <ItemsPresenter x:Uid="ItemsPresenter_1"
                                          x:Name="ItemsPresenter"
                                          KeyboardNavigation.DirectionalNavigation="Contained"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                      </ScrollViewer>
                    </Border>
                  </Themes:SystemDropShadowChrome>
                </Popup>
                <Border x:Uid="Border"
                        x:Name="Border"
                        Opacity="0.8"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Grid.ColumnSpan="2" />
                <TextBox x:Uid="PART_EditableTextBox"
                         x:Name="PART_EditableTextBox"
                         CaretBrush="{TemplateBinding Foreground}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                  <TextBox.Style>
                    <Style x:Uid="Style_18"
                           TargetType="{x:Type TextBox}">
                      <Setter x:Uid="Setter_135"
                              Property="OverridesDefaultStyle"
                              Value="True" />
                      <Setter x:Uid="Setter_136"
                              Property="AllowDrop"
                              Value="True" />
                      <Setter x:Uid="Setter_137"
                              Property="MinWidth"
                              Value="0" />
                      <Setter x:Uid="Setter_138"
                              Property="MinHeight"
                              Value="0" />
                      <Setter x:Uid="Setter_139"
                              Property="FocusVisualStyle"
                              Value="{x:Null}" />
                      <Setter x:Uid="Setter_140"
                              Property="ScrollViewer.PanningMode"
                              Value="VerticalFirst" />
                      <Setter x:Uid="Setter_141"
                              Property="Stylus.IsFlicksEnabled"
                              Value="False" />
                      <Setter x:Uid="Setter_142"
                              Property="Template">
                        <Setter.Value>
                          <ControlTemplate x:Uid="ControlTemplate_22"
                                           TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Uid="PART_ContentHost"
                                          x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                              <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Uid="VisualStateGroup_15"
                                                  x:Name="CommonStates">
                                  <VisualStateGroup.Transitions>
                                    <VisualTransition x:Uid="VisualTransition_21"
                                                      GeneratedDuration="0:0:0.5" />
                                  </VisualStateGroup.Transitions>
                                  <VisualState x:Uid="VisualState_38"
                                               x:Name="Normal" />
                                  <VisualState x:Uid="VisualState_39"
                                               x:Name="MouseOver">
                                    <Storyboard x:Uid="Storyboard_46">
                                      <DoubleAnimation x:Uid="DoubleAnimation_39"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Storyboard.TargetName="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}"
                                                       To="0.925" />
                                    </Storyboard>
                                  </VisualState>
                                </VisualStateGroup>
                              </VisualStateManager.VisualStateGroups>
                            </ScrollViewer>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </TextBox.Style>
                </TextBox>
                <ToggleButton x:Uid="ToggleButton_2"
                              Grid.Column="1"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                  <ToggleButton.Style>
                    <Style x:Uid="Style_19"
                           TargetType="{x:Type ToggleButton}">
                      <Setter x:Uid="Setter_143"
                              Property="OverridesDefaultStyle"
                              Value="True" />
                      <Setter x:Uid="Setter_144"
                              Property="IsTabStop"
                              Value="False" />
                      <Setter x:Uid="Setter_145"
                              Property="Focusable"
                              Value="False" />
                      <Setter x:Uid="Setter_146"
                              Property="ClickMode"
                              Value="Press" />
                      <Setter x:Uid="Setter_147"
                              Property="Background"
                              Value="Transparent" />
                      <Setter x:Uid="Setter_148"
                              Property="Template">
                        <Setter.Value>
                          <ControlTemplate x:Uid="ControlTemplate_23"
                                           TargetType="{x:Type ToggleButton}">
                            <Border x:Uid="Border_11"
                                    x:Name="Chrome"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                              <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Uid="VisualStateGroup_16"
                                                  x:Name="CommonStates">
                                  <VisualStateGroup.Transitions>
                                    <VisualTransition x:Uid="VisualTransition_22"
                                                      GeneratedDuration="0:0:0.5" />
                                  </VisualStateGroup.Transitions>
                                  <VisualState x:Uid="VisualState_40"
                                               x:Name="Normal" />
                                  <VisualState x:Uid="VisualState_41"
                                               x:Name="Disabled">
                                    <Storyboard x:Uid="Storyboard_47">
                                      <DoubleAnimation x:Uid="DoubleAnimation_40"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To="0.3" />
                                      <ColorAnimation x:Uid="ColorAnimation_11"
                                                      Storyboard.TargetName="Arrow"
                                                      Storyboard.TargetProperty="Fill"
                                                      To="#FFAFAFAF" />
                                    </Storyboard>
                                  </VisualState>
                                  <VisualState x:Uid="VisualState_42"
                                               x:Name="MouseOver">
                                    <Storyboard x:Uid="Storyboard_48">
                                      <DoubleAnimation x:Uid="DoubleAnimation_41"
                                                       Storyboard.TargetName="Arrow"
                                                       Storyboard.TargetProperty="Opacity"
                                                       To="0.5" />
                                    </Storyboard>
                                  </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Uid="VisualStateGroup_17"
                                                  x:Name="FocusStates">
                                  <VisualState x:Uid="VisualState_43"
                                               x:Name="Unfocused" />
                                  <VisualState x:Uid="VisualState_44"
                                               x:Name="Focused">
                                    <Storyboard x:Uid="Storyboard_49">
                                      <DoubleAnimation x:Uid="DoubleAnimation_42"
                                                       Storyboard.TargetName="Chrome"
                                                       Storyboard.TargetProperty="Opacity"
                                                       From="0.8"
                                                       To="0.95"
                                                       AutoReverse="True"
                                                       RepeatBehavior="Forever">
                                        <DoubleAnimation.EasingFunction>
                                          <QuadraticEase x:Uid="QuadraticEase_6"
                                                         EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                      </DoubleAnimation>
                                    </Storyboard>
                                  </VisualState>
                                </VisualStateGroup>
                              </VisualStateManager.VisualStateGroups>
                              <Path x:Uid="Path_2"
                                    x:Name="Arrow"
                                    Data="M0,0L3.5,4 7,0z"
                                    Fill="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Center"
                                    Margin="0,1,0,0"
                                    VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger x:Uid="Trigger_27"
                                       Property="IsChecked"
                                       Value="True">
                                <Setter x:Uid="Setter_149"
                                        Property="Effect"
                                        TargetName="Arrow">
                                  <Setter.Value>
                                    <BlurEffect x:Uid="BlurEffect_2" />
                                  </Setter.Value>
                                </Setter>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </ToggleButton.Style>
                </ToggleButton>
              </Grid>
              <ControlTemplate.Triggers>

                <Trigger x:Uid="Trigger_28"
                         Property="HasItems"
                         Value="False">
                  <Setter x:Uid="Setter_150"
                          Property="Height"
                          TargetName="DropDownBorder"
                          Value="95" />
                </Trigger>
                <Trigger x:Uid="Trigger_29"
                         Property="IsEnabled"
                         Value="False">
                  <Setter x:Uid="Setter_151"
                          Property="Foreground"
                          Value="Gray" />
                  <Setter x:Uid="Setter_152"
                          Property="Opacity"
                          Value="0.3" />
                </Trigger>
                <Trigger x:Uid="Trigger_30"
                         Property="HasDropShadow"
                         SourceName="PART_Popup"
                         Value="True">
                  <Setter x:Uid="Setter_153"
                          Property="Margin"
                          TargetName="Shdw"
                          Value="0,0,5,5" />
                  <Setter x:Uid="Setter_154"
                          Property="Color"
                          TargetName="Shdw"
                          Value="#71000000" />
                </Trigger>
                <Trigger x:Uid="Trigger_31"
                         Property="CanContentScroll"
                         SourceName="DropDownScrollViewer"
                         Value="False">
                  <Setter x:Uid="Setter_155"
                          Property="Canvas.Top"
                          TargetName="OpaqueRect"
                          Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                  <Setter x:Uid="Setter_156"
                          Property="Canvas.Left"
                          TargetName="OpaqueRect"
                          Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--Set properties for ComboBoxes-->
  <Style x:Uid="Style_20"
         TargetType="{x:Type ComboBox}"
         BasedOn="{StaticResource {x:Type ComboBox}}"
         x:Key="DataColumnComboBoxStyle">
    <Setter x:Uid="Setter_157"
            Property="Background"
            Value="{DynamicResource CrystalBackgroundFill2}" />
    <Setter x:Uid="Setter_158"
            Property="Foreground"
            Value="{DynamicResource CrystalForeground2}" />
    <Setter x:Uid="Setter_159"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter x:Uid="Setter_160"
            Property="BorderThickness"
            Value="1" />
    <Setter x:Uid="Setter_161"
            Property="Padding"
            Value="4,0" />
  </Style>

    <!--Set properties for DataGridCells-->
  <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}"
					 Color="#FF000000" />
  <Style TargetType="{x:Type DataGridCell}">
    <Setter Property="Background"
				Value="Transparent" />
    <Setter Property="BorderBrush"
				Value="Transparent" />
    <Setter Property="BorderThickness"
				Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsKeyboardFocusWithin"
					 Value="True">
        <Setter Property="BorderBrush"
						Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--Set properties for DataGridRows-->
  <Style x:Uid="Style_22"
         TargetType="{x:Type DataGridRow}">
    <Setter x:Uid="Setter_167"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_168"
            Property="Background"
            Value="White" />
    <Setter x:Uid="Setter_169"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter x:Uid="Setter_170"
            Property="BorderThickness"
            Value="1" />
    <Setter x:Uid="Setter_171"
            Property="Padding"
            Value="2" />
    <Setter x:Uid="Setter_172"
            Property="SnapsToDevicePixels"
            Value="true" />
    <Setter x:Uid="Setter_173"
            Property="Validation.ErrorTemplate"
            Value="{x:Null}" />
    <Setter x:Uid="Setter_174"
            Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_25">
          <TextBlock x:Uid="TextBlock_2"
                     Foreground="Red"
                     Margin="2,0,0,0"
                     Text="!"
                     VerticalAlignment="Center" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter x:Uid="Setter_175"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_26"
                         TargetType="{x:Type DataGridRow}">
          <Border x:Uid="DGR_Border"
                  x:Name="DGR_Border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
            <SelectiveScrollingGrid x:Uid="SelectiveScrollingGrid_1">
              <SelectiveScrollingGrid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_21"
                                  Width="Auto" />
                <ColumnDefinition x:Uid="ColumnDefinition_22"
                                  Width="*" />
              </SelectiveScrollingGrid.ColumnDefinitions>
              <SelectiveScrollingGrid.RowDefinitions>
                <RowDefinition x:Uid="RowDefinition_13"
                               Height="*" />
                <RowDefinition x:Uid="RowDefinition_14"
                               Height="Auto" />
              </SelectiveScrollingGrid.RowDefinitions>
              <DataGridCellsPresenter x:Uid="DataGridCellsPresenter_1"
                                      Grid.Column="1"
                                      ItemsPanel="{TemplateBinding ItemsPanel}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter x:Uid="DataGridDetailsPresenter_1"
                                        Grid.Column="1"
                                        Grid.Row="1"
                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                        Visibility="{TemplateBinding DetailsVisibility}" />
              <DataGridRowHeader x:Uid="DataGridRowHeader_1"
                                 Grid.RowSpan="2"
                                 SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                 Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            </SelectiveScrollingGrid>
          </Border>
          <ControlTemplate.Triggers>

            <!--Produce a nice hover animation and effect when hovering over an item.-->
            <MultiTrigger x:Uid="MultiTrigger_2">
              <MultiTrigger.Conditions>
                <Condition x:Uid="Condition_3"
                           Property="IsMouseOver"
                           Value="True" />
                <Condition x:Uid="Condition_4"
                           Property="IsSelected"
                           Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter x:Uid="Setter_176"
                          Property="Background"
                          TargetName="DGR_Border"
                          Value="{DynamicResource CrystalBorder2}" />
                <Setter x:Uid="Setter_178"
                          Property="Foreground"
                          Value="White" />

              </MultiTrigger.Setters>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Uid="BeginStoryboard_5">
                  <Storyboard x:Uid="Storyboard_50">
                    <DoubleAnimation x:Uid="DoubleAnimation_43"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="DGR_Border"
                                     From="1"
                                     To="0.6"
                                     Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard x:Uid="BeginStoryboard_6">
                  <Storyboard x:Uid="Storyboard_51">
                    <DoubleAnimation x:Uid="DoubleAnimation_44"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="DGR_Border"
                                     From="0.6"
                                     To="1"
                                     Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.ExitActions>
            </MultiTrigger>

            <!--When an item is selected, change the color.-->
            <Trigger x:Uid="Trigger_33"
                     Property="IsSelected"
                     Value="True">
              <Setter x:Uid="Setter_176"
                      Property="Background"
                      TargetName="DGR_Border"
                      Value="{DynamicResource CrystalBorder2}" />
            </Trigger>
            <MultiTrigger x:Uid="MultiTrigger_3">
              <MultiTrigger.Conditions>
                <Condition x:Uid="Condition_5"
                           Property="IsSelected"
                           Value="true" />
                <Condition x:Uid="Condition_6"
                           Property="Selector.IsSelectionActive"
                           Value="false" />
              </MultiTrigger.Conditions>
              <Setter x:Uid="Setter_177"
                      Property="Background"
                      TargetName="DGR_Border"
                      Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
              <Setter x:Uid="Setter_178"
                      Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
            </MultiTrigger>
            <Trigger x:Uid="Trigger_34"
                     Property="IsEnabled"
                     Value="false">
              <Setter x:Uid="Setter_179"
                      Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger x:Uid="Trigger_35"
               Property="IsNewItem"
               Value="True">
        <Setter x:Uid="Setter_180"
                Property="Margin"
                Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
      </Trigger>

    </Style.Triggers>
  </Style>

  <!--Set the properties for DataGrids-->
  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="Background"
				Value="Transparent" />
    <Setter Property="BorderBrush"
				Value="{DynamicResource CrystalBorder2}" />
    <Setter Property="HorizontalGridLinesBrush"
				Value="White" />
  </Style>

  <!--Set properties for DatePickers-->
  <Style x:Uid="Style_24"
         TargetType="{x:Type DatePicker}">
    <Setter x:Uid="Setter_184"
            Property="CalendarStyle"
            Value="{DynamicResource CalendarStyle}" />
    <Setter x:Uid="Setter_185"
            Property="IsTodayHighlighted"
            Value="True" />
    <Setter x:Uid="Setter_186"
            Property="SelectedDateFormat"
            Value="Short" />
    <Setter x:Uid="Setter_187"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_188"
            Property="Background"
            Value="White" />
    <Setter x:Uid="Setter_189"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter x:Uid="Setter_190"
            Property="Padding"
            Value="2" />
    <Setter x:Uid="Setter_191"
            Property="BorderThickness"
            Value="{DynamicResource CrystalBorderThickness2}" />
    <Setter x:Uid="Setter_192"
            Property="Margin"
            Value="1" />
    <Setter x:Uid="Setter_193"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_27"
                         TargetType="{x:Type DatePicker}">
          <Border x:Uid="Border_13"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="VisualStateGroup_18"
                                x:Name="CommonStates">
                <VisualState x:Uid="VisualState_45"
                             x:Name="Normal" />
                <VisualState x:Uid="VisualState_46"
                             x:Name="Disabled">
                  <Storyboard x:Uid="Storyboard_52">
                    <DoubleAnimation x:Uid="DoubleAnimation_45"
                                     Duration="0"
                                     To="1"
                                     Storyboard.TargetProperty="Opacity"
                                     Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Uid="Grid_18"
                  x:Name="PART_Root"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_23"
                                  Width="*" />
                <ColumnDefinition x:Uid="ColumnDefinition_24"
                                  Width="Auto" />
              </Grid.ColumnDefinitions>
              <Button x:Uid="PART_Button"
                      x:Name="PART_Button"
                      Template="{StaticResource CrystalChromeButton}"
                      Background="{TemplateBinding Background}"
                      Grid.Column="1"
                      Focusable="False"
                      Padding="0"
                      Margin="0"
                      Width="15"
                      BorderThickness="0">
                <Path x:Uid="Path_3"
                      x:Name="Arrow"
                      Data="M0,0L3.5,4 7,0z"
                      Fill="{TemplateBinding Foreground}"
                      HorizontalAlignment="Center"
                      Margin="0,1,0,0"
                      VerticalAlignment="Center" />
              </Button>
              <DatePickerTextBox x:Uid="PART_TextBox"
                                 x:Name="PART_TextBox"
                                 Margin="0"
                                 BorderThickness="0"
                                 Background="{TemplateBinding Background}"
                                 Padding="{TemplateBinding Padding}"
                                 Focusable="{TemplateBinding Focusable}"
                                 HorizontalContentAlignment="Stretch"
                                 VerticalContentAlignment="Stretch">
                <DatePickerTextBox.Template>
                  <ControlTemplate x:Uid="ControlTemplate_28"
                                   TargetType="{x:Type TextBoxBase}">
                    <Border x:Uid="Border_14"
                            x:Name="Border"
                            Opacity="0.8"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Uid="VisualStateGroup_19"
                                          x:Name="CommonStates">
                          <VisualStateGroup.Transitions>
                            <VisualTransition x:Uid="VisualTransition_23"
                                              GeneratedDuration="0:0:0.5" />
                          </VisualStateGroup.Transitions>
                          <VisualState x:Uid="VisualState_47"
                                       x:Name="Normal" />
                          <VisualState x:Uid="VisualState_49"
                                       x:Name="Disabled">
                            <Storyboard x:Uid="Storyboard_54">
                              <DoubleAnimation x:Uid="DoubleAnimation_47"
                                               Storyboard.TargetProperty="Opacity"
                                               To="0.3" />
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <ScrollViewer x:Uid="ScrollViewer_2"
                                    x:Name="PART_ContentHost"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="IsMouseOver"
                                     Value="True" />
                          <Condition Property="IsFocused"
                                     Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource CrystalBackgroundFill2}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource CrystalForeground2}" />
                      </MultiTrigger>
                      <Trigger Property="IsFocused"
                               Value="True">
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource CrystalBorder2}" />
                        <Setter Property="BorderThickness"
                                Value="1.5" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </DatePickerTextBox.Template>
              </DatePickerTextBox>
              <Grid x:Uid="Grid_19"
                    x:Name="PART_DisabledVisual"
                    Grid.ColumnSpan="2"
                    Grid.Column="0"
                    IsHitTestVisible="False"
                    Opacity="0"
                    Grid.Row="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Uid="ColumnDefinition_25"
                                    Width="*" />
                  <ColumnDefinition x:Uid="ColumnDefinition_26"
                                    Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Uid="Popup_2"
                       x:Name="PART_Popup"
                       PopupAnimation="Slide"
                       AllowsTransparency="True"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=PART_TextBox}"
                       StaysOpen="False" />
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger x:Uid="DataTrigger_4"
                         Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                         Value="false">
              <Setter x:Uid="Setter_197"
                      Property="Foreground"
                      TargetName="PART_TextBox"
                      Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver"
                           Value="True" />
                <Condition Property="IsFocused"
                           Value="False"
                           SourceName="PART_TextBox" />
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter Property="Foreground"
                      Value="{DynamicResource CrystalForeground2}" />
            </MultiTrigger>
            <Trigger Property="IsFocused"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{DynamicResource CrystalBorder2}" />
              <Setter Property="BorderThickness"
                      Value="1.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for Expanders-->
  <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke"
					 Color="DodgerBlue" />
  <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill"
					 Color="Transparent" />
  <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke"
					 Color="DodgerBlue" />
  <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke"
					 Color="DarkBlue" />
  <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill"
					 Color="Transparent" />
  <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke"
					 Color="DarkBlue" />
  <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke"
					 Color="DarkGray" />
  <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill"
					 Color="Transparent" />
  <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke"
					 Color="#666" />
  <SolidColorBrush x:Key="Expander.Static.Circle.Fill"
					 Color="Transparent" />

  <!--The expander static circle and arrow stroke are bound to the foreground color-->
  <Style x:Key="ExpanderRightHeaderStyle"
		   TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent"
							  SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle"
										 Fill="{StaticResource Expander.Static.Circle.Fill}"
										 HorizontalAlignment="Center"
										 Height="19"
										 Stroke="{TemplateBinding Foreground}"
										 VerticalAlignment="Center"
										 Width="19" />
                <Path x:Name="arrow"
									  Data="M 1,1.5 L 4.5,5 L 8,1.5"
									  HorizontalAlignment="Center"
									  SnapsToDevicePixels="false"
									  Stroke="{TemplateBinding Foreground}"
									  StrokeThickness="2"
									  VerticalAlignment="Center" />
              </Grid>
              <ContentPresenter HorizontalAlignment="Center"
											  Margin="0,4,0,0"
											  Grid.Row="1"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="True"
											  VerticalAlignment="Top" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
								 Value="true">
              <Setter Property="Data"
									TargetName="arrow"
									Value="M 1,4.5 L 4.5,1 L 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsPressed"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
              <Setter Property="StrokeThickness"
									TargetName="circle"
									Value="1.5" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle"
		   TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent"
							  SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle"
										 Fill="{StaticResource Expander.Static.Circle.Fill}"
										 HorizontalAlignment="Center"
										 Height="19"
										 Stroke="{TemplateBinding Foreground}"
										 VerticalAlignment="Center"
										 Width="19" />
                <Path x:Name="arrow"
									  Data="M 1,1.5 L 4.5,5 L 8,1.5"
									  HorizontalAlignment="Center"
									  SnapsToDevicePixels="false"
									  Stroke="{TemplateBinding Foreground}"
									  StrokeThickness="2"
									  VerticalAlignment="Center" />
              </Grid>
              <ContentPresenter Grid.Column="1"
											  HorizontalAlignment="Left"
											  Margin="4,0,0,0"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="True"
											  VerticalAlignment="Center" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
								 Value="true">
              <Setter Property="Data"
									TargetName="arrow"
									Value="M 1,4.5 L 4.5,1 L 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsPressed"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
              <Setter Property="StrokeThickness"
									TargetName="circle"
									Value="1.5" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle"
		   TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent"
							  SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle"
										 Fill="{StaticResource Expander.Static.Circle.Fill}"
										 HorizontalAlignment="Center"
										 Height="19"
										 Stroke="{TemplateBinding Foreground}"
										 VerticalAlignment="Center"
										 Width="19" />
                <Path x:Name="arrow"
									  Data="M 1,1.5 L 4.5,5 L 8,1.5"
									  HorizontalAlignment="Center"
									  SnapsToDevicePixels="false"
									  Stroke="{TemplateBinding Foreground}"
									  StrokeThickness="2"
									  VerticalAlignment="Center" />
              </Grid>
              <ContentPresenter HorizontalAlignment="Center"
											  Margin="0,4,0,0"
											  Grid.Row="1"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="True"
											  VerticalAlignment="Top" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
								 Value="true">
              <Setter Property="Data"
									TargetName="arrow"
									Value="M 1,4.5 L 4.5,1 L 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsPressed"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
              <Setter Property="StrokeThickness"
									TargetName="circle"
									Value="1.5" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0"
								   SnapsToDevicePixels="true"
								   Stroke="Black"
								   StrokeThickness="1"
								   StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderDownHeaderStyle"
		   TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent"
							  SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle"
									 Fill="{StaticResource Expander.Static.Circle.Fill}"
									 HorizontalAlignment="Center"
									 Height="19"
									 Stroke="{TemplateBinding Foreground}"
									 VerticalAlignment="Center"
									 Width="19" />
              <Path x:Name="arrow"
								  Data="M 1,1.5 L 4.5,5 L 8,1.5"
								  HorizontalAlignment="Center"
								  SnapsToDevicePixels="false"
								  Stroke="{TemplateBinding Foreground}"
								  StrokeThickness="2"
								  VerticalAlignment="Center" />
              <ContentPresenter Grid.Column="1"
											  HorizontalAlignment="Left"
											  Margin="4,0,0,0"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="True"
											  VerticalAlignment="Center" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
								 Value="true">
              <Setter Property="Data"
									TargetName="arrow"
									Value="M 1,4.5 L 4.5,1 L 8,4.5" />
            </Trigger>
            <Trigger Property="IsMouseOver"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.MouseOver.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.MouseOver.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsPressed"
								 Value="true">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Stroke}" />
              <Setter Property="StrokeThickness"
									TargetName="circle"
									Value="1.5" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Pressed.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Pressed.Arrow.Stroke}" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Stroke"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Stroke}" />
              <Setter Property="Fill"
									TargetName="circle"
									Value="{StaticResource Expander.Disabled.Circle.Fill}" />
              <Setter Property="Stroke"
									TargetName="arrow"
									Value="{StaticResource Expander.Disabled.Arrow.Stroke}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Expander}">
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalForeground}" />
    <Setter Property="Background"
				Value="Transparent" />
    <Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
    <Setter Property="VerticalContentAlignment"
				Value="Stretch" />
    <Setter Property="BorderBrush"
				Value="Transparent" />
    <Setter Property="BorderThickness"
				Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							CornerRadius="3"
							SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
										  Content="{TemplateBinding Header}"
										  DockPanel.Dock="Top"
										  Foreground="{TemplateBinding Foreground}"
										  FontWeight="{TemplateBinding FontWeight}"
										  FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
										  FontStyle="{TemplateBinding FontStyle}"
										  FontStretch="{TemplateBinding FontStretch}"
										  FontSize="{TemplateBinding FontSize}"
										  FontFamily="{TemplateBinding FontFamily}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										  Margin="1"
										  MinWidth="0"
										  MinHeight="0"
										  Padding="{TemplateBinding Padding}"
										  Style="{StaticResource ExpanderDownHeaderStyle}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              <ContentPresenter x:Name="ExpandSite"
											  DockPanel.Dock="Bottom"
											  Focusable="false"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  Visibility="Collapsed"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
								 Value="true">
              <Setter Property="Visibility"
									TargetName="ExpandSite"
									Value="Visible" />
            </Trigger>
            <Trigger Property="ExpandDirection"
								 Value="Right">
              <Setter Property="DockPanel.Dock"
									TargetName="ExpandSite"
									Value="Right" />
              <Setter Property="DockPanel.Dock"
									TargetName="HeaderSite"
									Value="Left" />
              <Setter Property="Style"
									TargetName="HeaderSite"
									Value="{StaticResource ExpanderRightHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection"
								 Value="Up">
              <Setter Property="DockPanel.Dock"
									TargetName="ExpandSite"
									Value="Top" />
              <Setter Property="DockPanel.Dock"
									TargetName="HeaderSite"
									Value="Bottom" />
              <Setter Property="Style"
									TargetName="HeaderSite"
									Value="{StaticResource ExpanderUpHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection"
								 Value="Left">
              <Setter Property="DockPanel.Dock"
									TargetName="ExpandSite"
									Value="Left" />
              <Setter Property="DockPanel.Dock"
									TargetName="HeaderSite"
									Value="Right" />
              <Setter Property="Style"
									TargetName="HeaderSite"
									Value="{StaticResource ExpanderLeftHeaderStyle}" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for GroupBoxes-->
  <Style TargetType="{x:Type GroupBox}">
    <Setter Property="Padding"
				Value="10" />
    <Setter Property="BorderThickness"
				Value="0" />
    <Setter Property="Foreground"
				Value="Green" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border x:Name="Header"
								Grid.Column="1"
								Padding="3,1,3,0"
								Grid.Row="0"
								Grid.RowSpan="2">
              <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
											  TextElement.Foreground="{TemplateBinding Foreground}"
											  Content="{TemplateBinding Header}"
											  TextElement.FontSize="16"
											  TextElement.FontWeight="Thin"
											  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
											  ContentSource="Header"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <Border Grid.ColumnSpan="2"
								Grid.Column="1"
								Grid.Row="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}"
											  ContentStringFormat="{TemplateBinding ContentStringFormat}"
											  Margin="{TemplateBinding Padding}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for thick headings-->
  <Style  x:Key="CrystalHeadings"
			TargetType="{x:Type Label}">
    <Setter Property="FontFamily"
				Value="Calibri Light" />
    <Setter Property="FontWeight"
				Value="Light" />
    <Setter Property="FontSize"
				Value="18px" />
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalHeadingForeground}" />
  </Style>

  <!--Set properties for dark thick headings-->
  <Style  x:Key="CrystalHeadingsDark"
			TargetType="{x:Type Label}"
			BasedOn="{StaticResource CrystalHeadings}">
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalDarkHeadingForeground2}" />
  </Style>

  <!--Set properties for thin headings-->
  <Style  x:Key="CrystalHeadings2"
			TargetType="{x:Type Label}">
    <Setter Property="FontFamily"
				Value="Segoe UI" />
    <Setter Property="FontWeight"
				Value="Thin" />
    <Setter Property="FontSize"
				Value="18px" />
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalHeadingForeground2}" />
  </Style>

  <!--Set properties for dark thin headings-->
  <Style  x:Key="CrystalHeadings2Dark"
			TargetType="{x:Type Label}"
			BasedOn="{StaticResource CrystalHeadings2}">
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalDarkHeadingForeground2}" />
  </Style>

  <!--Set properties for Hyperlinks-->
  <Style TargetType="{x:Type Hyperlink}">
    <Setter Property="Foreground"
				Value="{DynamicResource CrystalForeground2}" />
    <Setter Property="TextDecorations">
      <Setter.Value>
        <TextDecorationCollection>
          <TextDecoration>
            <TextDecoration.Pen>
              <Pen Brush="White">
                <Pen.DashStyle>
                  <DashStyle Dashes="4,4" />
                </Pen.DashStyle>
              </Pen>
            </TextDecoration.Pen>
          </TextDecoration>
        </TextDecorationCollection>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver"
					 Value="True">
        <Setter Property="TextDecorations"
						Value="Underline" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="Hyperlink"
		   x:Key="TabControlHyperLinks">
    <Setter Property="TextDecorations"
				Value="Underline" />
    <Setter Property="Foreground"
				Value="Black" />
    <Setter Property="FontSize"
				Value="16" />
    <Setter Property="FontWeight"
				Value="Light" />
    <Setter Property="FontFamily"
				Value="Calibri" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver"
					 Value="True">
        <Setter Property="Foreground"
						Value="Gray" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--Set properties for Labels-->
  <Style TargetType="{x:Type Label}">
    <Setter Property="Foreground"
				Value="White" />
  </Style>

  <!--Set properties for ListBoxItems-->
  <Style x:Uid="Style_39"
         TargetType="{x:Type ListBoxItem}">
    <Setter x:Uid="Setter_292"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_295"
            Property="BorderThickness"
            Value="1" />
    <Setter x:Uid="Setter_296"
            Property="Padding"
            Value="5" />
    <Setter x:Uid="Setter_297"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_36"
                         TargetType="{x:Type ListBoxItem}">
          <Grid x:Uid="Grid_28"
                ClipToBounds="{TemplateBinding ClipToBounds}"
                MinHeight="15">
            <Border x:Uid="Border_22"
                    x:Name="Background"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <ContentPresenter x:Uid="ContentPresenter_16"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              x:Name="Content"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>

            <!--Produce a nice hover animation and effect when hovering over an item.-->
            <Trigger x:Uid="Trigger_60"
                     Property="IsMouseOver"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{DynamicResource CrystalBorder2}" />
              <Setter Property="BorderThickness"
                      Value="1" />
            </Trigger>

            <!--When an item is selected, make it blue.-->
            <Trigger x:Uid="Trigger_61"
                     Property="IsSelected"
                     Value="True">
              <Setter x:Uid="Setter_298"
                      Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter Property="Foreground"
                      Value="White" />

            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>

      </Setter.Value>
    </Setter>


  </Style>

  <!--Set properties for ListBoxes-->
  <Style TargetType="{x:Type ListBox}">
    <Setter Property="BorderBrush"
				Value="{DynamicResource CrystalBorder2}" />
    <Setter Property="BorderThickness"
				Value="{StaticResource CrystalBorderThickness2}" />
    <Setter Property="Padding"
				Value="0" />
    <Setter Property="Background"
				Value="Transparent" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
  </Style>

  <!--Set properties for paragraphs-->
  <Style TargetType="{x:Type Paragraph}">
    <Setter Property="FontFamily"
				Value="Segoe UI" />
    <Setter Property="FontSize"
				Value="12" />
  </Style>

  <!--Set properties for PasswordBoxes-->
  <Style x:Uid="Style_55"
         TargetType="{x:Type PasswordBox}">
    <Setter x:Uid="Setter_436"
            Property="Background"
            Value="White" />
    <Setter x:Uid="Setter_437"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter x:Uid="Setter_438"
            Property="BorderThickness"
            Value="{DynamicResource CrystalBorderThickness2}" />
    <Setter x:Uid="Setter_439"
            Property="Margin"
            Value="1" />
    <Setter x:Uid="Setter_440"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_442"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_48"
                         TargetType="{x:Type PasswordBox}">
          <Border x:Uid="Border_27"
                  x:Name="Border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="VisualStateGroup_22"
                                x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_25"
                                    GeneratedDuration="0:0:0.5" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_52"
                             x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer x:Uid="ScrollViewer_5"
                          x:Name="PART_ContentHost"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="True">
              <Setter Property="ToolTip"
                      Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
              <Setter Property="Background"
                      Value="Red"
                      TargetName="Border" />
            </Trigger>
            <Trigger x:Uid="Trigger_87"
                     Property="IsEnabled"
                     Value="False">
              <Setter x:Uid="Setter_443"
                      Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Setter x:Uid="Setter_444"
                      Property="TextElement.Foreground"
                      TargetName="Border"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver"
                           Value="True" />
                <Condition Property="IsFocused"
                           Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter Property="Foreground"
                      Value="{DynamicResource CrystalForeground2}" />
            </MultiTrigger>
            <Trigger Property="IsFocused"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{DynamicResource CrystalBorder2}" />
              <Setter Property="BorderThickness"
                      Value="1.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for Popups-->
  <Style TargetType="{x:Type Popup}">
    <Setter Property="StaysOpen"
				Value="False" />
    <Setter Property="AllowsTransparency"
				Value="True" />
    <Setter Property="PopupAnimation"
				Value="Scroll" />
  </Style>

  <!--Set properties for ProgressBars-->
  <SolidColorBrush x:Key="ProgressBar.Progress"
					 Color="DarkViolet" />
  <SolidColorBrush x:Key="ProgressBar.Background"
					 Color="#32E6E6E6" />
  <SolidColorBrush x:Key="ProgressBar.Border"
					 Color="#32BCBCBC" />
  <CornerRadius x:Key="ProgressBarCornerRadius"
				  BottomLeft="15"
				  BottomRight="15"
				  TopLeft="15"
				  TopRight="15" />
  <Style TargetType="{x:Type ProgressBar}">
    <Setter Property="Foreground"
				Value="{StaticResource ProgressBar.Progress}" />
    <Setter Property="Background"
				Value="{StaticResource ProgressBar.Background}" />
    <Setter Property="BorderBrush"
				Value="{StaticResource ProgressBar.Border}" />
    <Setter Property="BorderThickness"
				Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="TemplateRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
																	   Storyboard.TargetName="Animation">
                      <EasingDoubleKeyFrame KeyTime="0"
																  Value="0.25" />
                      <EasingDoubleKeyFrame KeyTime="0:0:1"
																  Value="0.25" />
                      <EasingDoubleKeyFrame KeyTime="0:0:2"
																  Value="0.25" />
                    </DoubleAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
																	  Storyboard.TargetName="Animation">
                      <EasingPointKeyFrame KeyTime="0"
																 Value="-0.5,0.5" />
                      <EasingPointKeyFrame KeyTime="0:0:1"
																 Value="0.5,0.5" />
                      <EasingPointKeyFrame KeyTime="0:0:2"
																 Value="1.5,0.5" />
                    </PointAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{StaticResource ProgressBarCornerRadius}"
								Background="{TemplateBinding Background}" />
            <Rectangle x:Name="PART_Track" />
            <Grid x:Name="PART_Indicator"
							  HorizontalAlignment="Left"
							  ClipToBounds="true">
              <Border x:Name="Indicator"
									CornerRadius="{StaticResource ProgressBarCornerRadius}"
									Background="{TemplateBinding Foreground}" />
              <Border x:Name="Animation"
									CornerRadius="{StaticResource ProgressBarCornerRadius}"
									RenderTransformOrigin="0.5,0.5"
									Background="{TemplateBinding Foreground}">
                <Border.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                  </TransformGroup>
                </Border.RenderTransform>
              </Border>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Orientation"
								 Value="Vertical">
              <Setter Property="LayoutTransform"
									TargetName="TemplateRoot">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsIndeterminate"
								 Value="true">
              <Setter Property="Visibility"
									TargetName="Indicator"
									Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for ScrollBars-->
  <SolidColorBrush x:Uid="SolidColorBrush_44"
                   x:Key="ThumbBackground"
                   Color="WhiteSmoke" />
  <SolidColorBrush x:Uid="SolidColorBrush_45"
                   x:Key="ThumbBorderBrush"
                   Color="LightGray" />
  <CornerRadius x:Uid="CornerRadius_2"
                x:Key="CornerRadius"
                BottomLeft="3"
                BottomRight="3"
                TopLeft="3"
                TopRight="3" />
  <SolidColorBrush x:Uid="SolidColorBrush_46"
                   x:Key="VerticalScrollBarBackground"
                   Color="Gray" />
  <SolidColorBrush x:Uid="SolidColorBrush_47"
                   x:Key="HorizontalScrollBarBackground"
                   Color="Gray" />
  <SolidColorBrush x:Uid="SolidColorBrush_48"
                   x:Key="ScrollBarDisabledBackground"
                   Color="WhiteSmoke" />
  <Style x:Uid="Style_45"
         x:Key="ScrollBarButton"
         TargetType="{x:Type RepeatButton}">
    <Setter x:Uid="Setter_327"
            Property="Padding"
            Value="0" />
    <Setter x:Uid="Setter_328"
            Property="Background"
            Value="Gray" />
    <Setter x:Uid="Setter_329"
            Property="BorderBrush"
            Value="Transparent" />
    <Setter x:Uid="Setter_330"
            Property="FontFamily"
            Value="Wingdings 3" />
    <Setter x:Uid="Setter_331"
            Property="Foreground"
            Value="White" />
    <Setter x:Uid="Setter_332"
            Property="Template"
            Value="{StaticResource CrystalRepeatButton}" />
  </Style>
  <Style x:Uid="Style_46"
         x:Key="VerticalScrollBarPageButton"
         TargetType="{x:Type RepeatButton}">
    <Setter x:Uid="Setter_333"
            Property="OverridesDefaultStyle"
            Value="true" />
    <Setter x:Uid="Setter_334"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_335"
            Property="Focusable"
            Value="false" />
    <Setter x:Uid="Setter_336"
            Property="IsTabStop"
            Value="false" />
    <Setter x:Uid="Setter_337"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_39"
                         TargetType="{x:Type RepeatButton}">
          <Rectangle x:Uid="Rectangle_8"
                     Fill="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Uid="Style_47"
         x:Key="ScrollBarThumb"
         TargetType="{x:Type Thumb}">
    <Setter x:Uid="Setter_338"
            Property="OverridesDefaultStyle"
            Value="true" />
    <Setter x:Uid="Setter_339"
            Property="IsTabStop"
            Value="false" />
    <Setter x:Uid="Setter_340"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_40"
                         TargetType="{x:Type Thumb}">
          <Border x:Uid="Border_25"
                  x:Name="Chrome"
                  Opacity="0.5"
                  Background="{StaticResource ThumbBackground}"
                  BorderBrush="{StaticResource ThumbBorderBrush}"
                  BorderThickness="1"
                  CornerRadius="{StaticResource CornerRadius}"
                  SnapsToDevicePixels="true" />
          <ControlTemplate.Triggers>

            <!--While the thumb is dragging, it will have a black background.-->
            <Trigger x:Uid="Trigger_66"
                     Property="IsDragging"
                     Value="True">
              <Setter x:Uid="Setter_341"
                      Property="Background"
                      TargetName="Chrome"
                      Value="Black" />
              <Setter x:Uid="Setter_342"
                      Property="BorderBrush"
                      TargetName="Chrome"
                      Value="Black" />
            </Trigger>

            <!--While the mouse hovers over the thumb, the background will slowly illuminate.-->
            <Trigger x:Uid="Trigger_67"
                     Property="IsMouseOver"
                     Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Uid="BeginStoryboard_9"
                                 x:Name="HoverStoryboard">
                  <Storyboard x:Uid="Storyboard_59"
                              Storyboard.TargetName="Chrome"
                              Storyboard.TargetProperty="Opacity">
                    <DoubleAnimation x:Uid="DoubleAnimation_51"
                                     To="1"
                                     Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard x:Uid="BeginStoryboard_10"
                                 x:Name="RemoveHoverStoryboard">
                  <Storyboard x:Uid="Storyboard_60"
                              Storyboard.TargetName="Chrome"
                              Storyboard.TargetProperty="Opacity">
                    <DoubleAnimation x:Uid="DoubleAnimation_52"
                                     To="0.5"
                                     Duration="0:0:0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Uid="Style_48"
         x:Key="HorizontalScrollBarPageButton"
         TargetType="{x:Type RepeatButton}">
    <Setter x:Uid="Setter_343"
            Property="OverridesDefaultStyle"
            Value="true" />
    <Setter x:Uid="Setter_344"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_345"
            Property="Focusable"
            Value="false" />
    <Setter x:Uid="Setter_346"
            Property="IsTabStop"
            Value="false" />
    <Setter x:Uid="Setter_347"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_41"
                         TargetType="{x:Type RepeatButton}">
          <Rectangle x:Uid="Rectangle_9"
                     Fill="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Uid="Style_49"
         TargetType="{x:Type ScrollBar}">
    <Setter x:Uid="Setter_348"
            Property="Background"
            Value="{StaticResource VerticalScrollBarBackground}" />
    <Setter x:Uid="Setter_349"
            Property="Stylus.IsPressAndHoldEnabled"
            Value="False" />
    <Setter x:Uid="Setter_350"
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
    <Setter x:Uid="Setter_351"
            Property="Width"
            Value="12" />
    <Setter x:Uid="Setter_351"
            Property="MinWidth"
            Value="0" />
    <Setter x:Uid="Setter_354"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_42"
                         TargetType="{x:Type ScrollBar}">
          <Grid x:Uid="Grid_29"
                SnapsToDevicePixels="true"
                Width="{Binding Width}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition x:Uid="RowDefinition_23"
                             Height="0.00001*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border x:Name="Bg"
                    Grid.RowSpan="3"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{StaticResource CornerRadius}" />
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          Margin="0,2.5,0,0">
              <Path Data="m 0,0 L  4, -2.5 8,0"
                    Margin="1"
                    StrokeThickness="3"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RepeatButton}}}" />
            </RepeatButton>
            <Track x:Uid="Track_1"
                   Grid.Row="1"
                   x:Name="PART_Track"
                   IsDirectionReversed="true"
                   IsEnabled="{TemplateBinding IsMouseOver}">
              <Track.DecreaseRepeatButton>
                <RepeatButton x:Uid="RepeatButton_1"
                              Command="{x:Static ScrollBar.PageUpCommand}"
                              Style="{StaticResource VerticalScrollBarPageButton}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton x:Uid="RepeatButton_2"
                              Command="{x:Static ScrollBar.PageDownCommand}"
                              Style="{StaticResource VerticalScrollBarPageButton}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb x:Uid="Thumb_1"
                       Style="{StaticResource ScrollBarThumb}"
                       Margin="0,1" />
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          Grid.Row="2"
                          Command="{x:Static ScrollBar.LineDownCommand}">
              <Path Data="m 0,0 L  4, 2.5 8,0"
                    Margin="1"
                    StrokeThickness="3"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RepeatButton}}}" />
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_68"
                     Property="IsEnabled"
                     Value="false">
              <Setter x:Uid="Setter_355"
                      Property="Background"
                      TargetName="Bg"
                      Value="{StaticResource ScrollBarDisabledBackground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger x:Uid="Trigger_70"
               Property="Orientation"
               Value="Horizontal">
        <Setter x:Uid="Setter_356"
                Property="Width"
                Value="Auto" />
        <Setter x:Uid="Setter_357"
                Property="Height"
                Value="12" />
        <Setter x:Uid="Setter_358"
                Property="MinHeight"
                Value="0" />
        <Setter x:Uid="Setter_359"
                Property="Background"
                Value="{StaticResource HorizontalScrollBarBackground}" />
        <Setter x:Uid="Setter_361"
      Property="Template">
          <Setter.Value>
            <ControlTemplate x:Uid="ControlTemplate_43"
                             TargetType="{x:Type ScrollBar}">
              <Grid x:Uid="Grid_30"
                    Width="{Binding Width}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition x:Uid="ColumnDefinition_35"
                                    Width="0.00001*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Bg"
                        Grid.ColumnSpan="3"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{StaticResource CornerRadius}" />
                <RepeatButton Style="{StaticResource ScrollBarButton}"
                              Command="{x:Static ScrollBar.LineLeftCommand}"
                              Margin="2.5,0,0,0">
                  <Path Data="m 0,0 L  -2.5,4 L 0,8"
                        Margin="1"
                        StrokeThickness="3"
                        Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RepeatButton}}}" />
                </RepeatButton>
                <Track x:Uid="Track_2"
                       Grid.Column="1"
                       x:Name="PART_Track"
                       IsEnabled="{TemplateBinding IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton x:Uid="RepeatButton_3"
                                  Command="{x:Static ScrollBar.PageLeftCommand}"
                                  Style="{StaticResource HorizontalScrollBarPageButton}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton x:Uid="RepeatButton_4"
                                  Command="{x:Static ScrollBar.PageRightCommand}"
                                  Style="{StaticResource HorizontalScrollBarPageButton}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb x:Uid="Thumb_2"
                           Style="{StaticResource ScrollBarThumb}"
                           Margin="1,0" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource ScrollBarButton}"
                              Grid.Column="2"
                              Command="{x:Static ScrollBar.LineRightCommand}">
                  <Path Data="m 0,0 L  2.5,4 L 0,8"
                        Margin="1"
                        StrokeThickness="3"
                        Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RepeatButton}}}" />
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger x:Uid="Trigger_68"
                         Property="IsEnabled"
                         Value="false">
                  <Setter x:Uid="Setter_355"
                          Property="Background"
                          TargetName="Bg"
                          Value="{StaticResource ScrollBarDisabledBackground}" />
                </Trigger>
                <Trigger x:Uid="Trigger_72"
                         Property="IsEnabled"
                         Value="false">
                  <Setter x:Uid="Setter_362"
                          Property="Background"
                          TargetName="Bg"
                          Value="{StaticResource ScrollBarDisabledBackground}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ScrollViewer}">
    <Setter Property="PanningMode"
            Value="Both" />
    <Setter Property="PanningRatio"
            Value="2" />
    <Setter Property="VerticalScrollBarVisibility"
            Value="Auto" />
    <Setter Property="HorizontalScrollBarVisibility"
            Value="Disabled" />
  </Style>

  <!--Set properties for TabItems-->
  <Style x:Key="TabItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1"
							   SnapsToDevicePixels="true"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   StrokeThickness="1"
							   StrokeDashArray="1 2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="TabControlNormalBorderBrush"
					 Color="Transparent" />
  <SolidColorBrush x:Key="ButtonNormalBackground"
					 Color="Transparent" />
  <SolidColorBrush x:Key="TabItemHotBackground"
					 Color="{Binding Color, Source={StaticResource LightHoverFill}}" />
  <SolidColorBrush x:Key="TabItemHotBorderBrush"
					 Color="Transparent" />
  <SolidColorBrush x:Key="TabItemSelectedBackground"
					 Color="{Binding Color, Source={StaticResource CrystalBackgroundFill2}}" />
  <SolidColorBrush x:Key="TabItemSelectedForeground"
					 Color="White" />
  <SolidColorBrush x:Key="TabItemDisabledBackground"
					 Color="#F4F4F4" />
  <SolidColorBrush x:Key="TabItemDisabledBorderBrush"
					 Color="#FFC9C7BA" />
  <Style TargetType="{x:Type TabItem}">
    <Setter Property="FocusVisualStyle"
				Value="{StaticResource TabItemFocusVisual}" />
    <Setter Property="Foreground"
				Value="Black" />
    <Setter Property="BorderBrush"
				Value="{StaticResource TabControlNormalBorderBrush}" />
    <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
    <Setter Property="Height"
				Value="35" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="Bd"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="1,1,1,0"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}">
              <ContentPresenter x:Name="Content"
											  TextElement.FontSize="16"
											  TextElement.FontWeight="Light"
											  TextElement.FontFamily="Calibri"
											  Margin="20,0"
											  ContentSource="Header"
											  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver"
										   Value="true" />
                <Condition Property="Focusable"
										   Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Background"
									TargetName="Bd"
									Value="{StaticResource TabItemHotBackground}" />
            </MultiTrigger>
            <Trigger Property="IsSelected"
								 Value="true">
              <Setter Property="Panel.ZIndex"
									Value="1" />
              <Setter Property="TextElement.Foreground"
									TargetName="Content"
									Value="{StaticResource TabItemSelectedForeground}" />
              <Setter Property="Background"
									TargetName="Bd"
									Value="{StaticResource TabItemSelectedBackground}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected"
										   Value="false" />
                <Condition Property="IsMouseOver"
										   Value="true" />
                <Condition Property="Focusable"
										   Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush"
									TargetName="Bd"
									Value="{StaticResource TabItemHotBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="TabStripPlacement"
								 Value="Bottom">
              <Setter Property="BorderThickness"
									TargetName="Bd"
									Value="1,0,1,1" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
								 Value="Left">
              <Setter Property="Margin"
									TargetName="Content"
									Value="50,0,0,0" />
              <Setter Property="Width"
									Value="300" />
              <Setter Property="BorderThickness"
									TargetName="Bd"
									Value="1,1,0,1" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
								 Value="Right">
              <Setter Property="Margin"
									TargetName="Content"
									Value="50,0,0,0" />
              <Setter Property="Width"
									Value="300" />
              <Setter Property="BorderThickness"
									TargetName="Bd"
									Value="0,1,1,1" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Background"
									TargetName="Bd"
									Value="{StaticResource TabItemDisabledBackground}" />
              <Setter Property="BorderBrush"
									TargetName="Bd"
									Value="{StaticResource TabItemDisabledBorderBrush}" />
              <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type TabItem}"
		   x:Key="Tab17"
		   BasedOn="{StaticResource {x:Type TabItem}}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid Name="MainGrid"
						  SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition Name="RDefinition1" />
              <RowDefinition Name="RDefinition2"
										   Height="5" />
            </Grid.RowDefinitions>
            <ContentPresenter x:Name="Content"
										  TextElement.FontSize="16"
										  TextElement.FontWeight="Light"
										  TextElement.FontFamily="Calibri"
										  Margin="20,0"
										  ContentSource="Header"
										  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

            <Border x:Name="Bd"
								Grid.Row="1"
								HorizontalAlignment="Stretch"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="1,1,1,0"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver"
										   Value="true" />
                <Condition Property="Focusable"
										   Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Background"
									TargetName="Bd"
									Value="{StaticResource TabItemHotBackground}" />
            </MultiTrigger>
            <Trigger Property="IsSelected"
								 Value="true">
              <Setter Property="Panel.ZIndex"
									Value="1" />
              <Setter Property="Background"
									TargetName="Bd"
									Value="{StaticResource TabItemSelectedBackground}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected"
										   Value="false" />
                <Condition Property="IsMouseOver"
										   Value="true" />
                <Condition Property="Focusable"
										   Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush"
									TargetName="Bd"
									Value="{StaticResource TabItemHotBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="TabStripPlacement"
								 Value="Bottom">
              <Setter Property="BorderThickness"
									TargetName="Bd"
									Value="1,0,1,1" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
								 Value="Left">
              <Setter Property="Margin"
									TargetName="Content"
									Value="50,0,0,0" />
              <Setter Property="Width"
									Value="300" />
              <Setter Property="BorderThickness"
									TargetName="Bd"
									Value="1,1,0,1" />
              <Setter TargetName="Bd"
									Property="Width"
									Value="30" />
              <Setter TargetName="Bd"
									Property="HorizontalAlignment"
									Value="Left" />
              <Setter Property="RenderTransform"
									TargetName="Bd">
                <Setter.Value>
                  <RotateTransform Angle="270" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement"
								 Value="Right">
              <Setter Property="Margin"
									TargetName="Content"
									Value="50,0,0,0" />
              <Setter Property="Width"
									Value="300" />
              <Setter Property="BorderThickness"
									TargetName="Bd"
									Value="0,1,1,1" />
              <Setter TargetName="Bd"
									Property="Width"
									Value="30" />
              <Setter TargetName="Bd"
									Property="HorizontalAlignment"
									Value="Right" />
              <Setter Property="RenderTransform"
									TargetName="Bd">
                <Setter.Value>
                  <RotateTransform Angle="90"
													 CenterX="30" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Background"
									TargetName="Bd"
									Value="{StaticResource TabItemDisabledBackground}" />
              <Setter Property="BorderBrush"
									TargetName="Bd"
									Value="{StaticResource TabItemDisabledBorderBrush}" />
              <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for TabControls-->
  <SolidColorBrush x:Key="TabControlNormalBorderBrush2"
					 Color="#8C8E94" />
  <SolidColorBrush x:Key="HeaderPanelBackground"
					 Color="#F9F9F9" />
  <Style TargetType="{x:Type TabControl}">
    <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Padding"
				Value="4" />
    <Setter Property="BorderThickness"
				Value="1" />
    <Setter Property="BorderBrush"
				Value="{StaticResource TabControlNormalBorderBrush}" />
    <Setter Property="Background"
				Value="White" />
    <Setter Property="HorizontalContentAlignment"
				Value="Left" />
    <Setter Property="VerticalContentAlignment"
				Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid ClipToBounds="true"
						  SnapsToDevicePixels="true"
						  KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0" />
              <ColumnDefinition x:Name="ColumnDefinition1"
											  Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0"
										   Height="Auto" />
              <RowDefinition x:Name="RowDefinition1"
										   Height="*" />
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto"
									  x:Name="HeaderPanel">
              <TabPanel Background="{StaticResource HeaderPanelBackground}"
									  IsItemsHost="true"
									  KeyboardNavigation.TabIndex="1"
									  Panel.ZIndex="1" />
            </ScrollViewer>
            <Border x:Name="ContentPanel"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Grid.Column="0"
								KeyboardNavigation.DirectionalNavigation="Contained"
								Grid.Row="1"
								Padding="20,20,0,20"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local">
              <ScrollViewer VerticalScrollBarVisibility="Auto"
										  Margin="{TemplateBinding Padding}">
                <ContentPresenter x:Name="PART_SelectedContentHost"
												  ContentSource="SelectedContent"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement"
								 Value="Bottom">
              <Setter Property="Grid.Row"
									TargetName="HeaderPanel"
									Value="1" />
              <Setter Property="Grid.Row"
									TargetName="ContentPanel"
									Value="0" />
              <Setter Property="Height"
									TargetName="RowDefinition0"
									Value="*" />
              <Setter Property="Height"
									TargetName="RowDefinition1"
									Value="Auto" />

            </Trigger>
            <Trigger Property="TabStripPlacement"
								 Value="Left">
              <Setter Property="Grid.Row"
									TargetName="HeaderPanel"
									Value="0" />
              <Setter Property="Grid.Row"
									TargetName="ContentPanel"
									Value="0" />
              <Setter Property="Grid.Column"
									TargetName="HeaderPanel"
									Value="0" />
              <Setter Property="Grid.Column"
									TargetName="ContentPanel"
									Value="1" />
              <Setter Property="Width"
									TargetName="ColumnDefinition0"
									Value="Auto" />
              <Setter Property="Width"
									TargetName="ColumnDefinition1"
									Value="*" />
              <Setter Property="Height"
									TargetName="RowDefinition0"
									Value="*" />
              <Setter Property="Height"
									TargetName="RowDefinition1"
									Value="0" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
								 Value="Right">
              <Setter Property="Grid.Row"
									TargetName="HeaderPanel"
									Value="0" />
              <Setter Property="Grid.Row"
									TargetName="ContentPanel"
									Value="0" />
              <Setter Property="Grid.Column"
									TargetName="HeaderPanel"
									Value="1" />
              <Setter Property="Grid.Column"
									TargetName="ContentPanel"
									Value="0" />
              <Setter Property="Width"
									TargetName="ColumnDefinition0"
									Value="*" />
              <Setter Property="Width"
									TargetName="ColumnDefinition1"
									Value="Auto" />
              <Setter Property="Height"
									TargetName="RowDefinition0"
									Value="*" />
              <Setter Property="Height"
									TargetName="RowDefinition1"
									Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled"
								 Value="false">
              <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for TextBlocks-->
  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="TextWrapping"
				Value="Wrap" />
  </Style>

  <!--Set properties for TextBoxes-->
  <Style x:Uid="Style_55"
         TargetType="{x:Type TextBox}">
    <Setter x:Uid="Setter_436"
            Property="Background"
            Value="White" />
    <Setter x:Uid="Setter_437"
            Property="BorderBrush"
            Value="{DynamicResource CrystalBorder2}" />
    <Setter x:Uid="Setter_438"
            Property="BorderThickness"
            Value="{DynamicResource CrystalBorderThickness2}" />
    <Setter x:Uid="Setter_439"
            Property="Margin"
            Value="1" />
    <Setter x:Uid="Setter_440"
            Property="Foreground"
            Value="{DynamicResource CrystalDarkForeground2}" />
    <Setter x:Uid="Setter_442"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_48"
                         TargetType="{x:Type TextBoxBase}">
          <Border x:Uid="Border_27"
                  x:Name="Border"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
                  SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Uid="VisualStateGroup_22"
                                x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition x:Uid="VisualTransition_25"
                                    GeneratedDuration="0:0:0.5" />
                </VisualStateGroup.Transitions>
                <VisualState x:Uid="VisualState_52"
                             x:Name="Normal" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer x:Uid="ScrollViewer_5"
                          x:Name="PART_ContentHost"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="True">
              <Setter Property="ToolTip"
                      Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
              <Setter Property="Background"
                      Value="Red"
                      TargetName="Border" />
            </Trigger>
            <Trigger x:Uid="Trigger_87"
                     Property="IsEnabled"
                     Value="False">
              <Setter x:Uid="Setter_443"
                      Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Setter x:Uid="Setter_444"
                      Property="TextElement.Foreground"
                      TargetName="Border"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver"
                           Value="True" />
                <Condition Property="IsFocused"
                           Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      Value="{DynamicResource CrystalBackgroundFill2}" />
              <Setter Property="Foreground"
                      Value="{DynamicResource CrystalForeground2}" />
            </MultiTrigger>
            <Trigger Property="IsFocused"
                     Value="True">
              <Setter Property="BorderBrush"
                      Value="{DynamicResource CrystalBorder2}" />
              <Setter Property="BorderThickness"
                      Value="1.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for ToolTips-->
  <Style TargetType="{x:Type ToolTip}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Grid x:Name="MainGrid">
            <Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="0"
								Background="{TemplateBinding Background}" />
            <ContentPresenter Margin="7,3" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground"
				Value="Black" />
    <Setter Property="BorderBrush"
				Value="Gray" />
    <Setter Property="BorderThickness"
				Value="1" />
    <Setter Property="Background"
				Value="WhiteSmoke" />
  </Style>

  <!--Set properties for TreeViewItems-->
  <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke"
         Color="{Binding Color, Source={StaticResource CrystalBackgroundFill2}}" />
  <SolidColorBrush x:Uid="SolidColorBrush_60"
                   x:Key="TreeViewItem.TreeArrow.Static.Stroke"
                   Color="White" />
  <SolidColorBrush x:Uid="SolidColorBrush_61"
                   x:Key="TreeViewItem.TreeArrow.Pressed.Stroke"
                   Color="DarkBlue" />
  <SolidColorBrush x:Uid="SolidColorBrush_62"
                   x:Key="TreeViewItem.TreeArrow.Pressed.Fill"
                   Color="Transparent" />
  <SolidColorBrush x:Uid="SolidColorBrush_63"
                   x:Key="TreeViewItem.TreeArrow.Static.Fill"
                   Color="Transparent" />
  <SolidColorBrush x:Uid="SolidColorBrush_64"
                   x:Key="TreeViewItem.TreeArrow.MouseOver.Fill"
                   Color="Transparent" />
  <SolidColorBrush x:Uid="SolidColorBrush_65"
                   x:Key="TreeViewItem.HoverBrush"
                   Color="{Binding Color, Source={StaticResource LightHoverFill}}" />
  <SolidColorBrush x:Uid="SolidColorBrush_66"
                   x:Key="TreeViewItem.SelectedBrush"
                   Color="{Binding Color, Source={StaticResource LightPressedFill}}" />
  <PathGeometry x:Uid="PathGeometry_1"
                x:Key="TreeArrow"
                Figures="M 1,1.5 L 4.5,5 L 8,1.5" />
  <Style x:Uid="Style_57"
         x:Key="ExpandCollapseToggleStyle"
         TargetType="{x:Type ToggleButton}">
    <Setter x:Uid="Setter_453"
            Property="Focusable"
            Value="False" />
    <Setter x:Uid="Setter_454"
            Property="Width"
            Value="Auto" />
    <Setter x:Uid="Setter_455"
            Property="Height"
            Value="Auto" />
    <Setter x:Uid="Setter_456"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_50"
                         TargetType="{x:Type ToggleButton}">
          <Grid x:Uid="Grid_35">
            <Ellipse x:Uid="Circle"
                     x:Name="Circle"
                     HorizontalAlignment="Center"
                     Height="19"
                     Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
                     Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
                     VerticalAlignment="Center"
                     Width="19" />
            <Path x:Uid="ExpandPath"
                  x:Name="ExpandPath"
                  Data="{StaticResource TreeArrow}"
                  StrokeThickness="2"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_89"
                     Property="IsChecked"
                     Value="True">
              <Setter x:Uid="Setter_457"
                      Property="Data"
                      TargetName="ExpandPath"
                      Value="M 1,4.5 L 4.5,1 L 8,4.5" />
            </Trigger>
            <Trigger x:Uid="Trigger_90"
                     Property="IsMouseOver"
                     Value="True">
              <Setter x:Uid="Setter_458"
                      Property="Stroke"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
              <Setter x:Uid="Setter_459"
                      Property="Stroke"
                      TargetName="Circle"
                      Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
              <Setter x:Uid="Setter_460"
                      Property="Fill"
                      TargetName="Circle"
                      Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
            </Trigger>
            <Trigger x:Uid="Trigger_91"
                     Property="IsPressed"
                     Value="True">
              <Setter x:Uid="Setter_461"
                      Property="Stroke"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItem.TreeArrow.Pressed.Stroke}" />
              <Setter x:Uid="Setter_462"
                      Property="Stroke"
                      TargetName="Circle"
                      Value="{StaticResource TreeViewItem.TreeArrow.Pressed.Stroke}" />
              <Setter x:Uid="Setter_463"
                      Property="Fill"
                      TargetName="Circle"
                      Value="{StaticResource TreeViewItem.TreeArrow.Pressed.Fill}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Uid="Style_58"
         TargetType="{x:Type TreeViewItem}">
    <Setter x:Uid="Setter_464"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_465"
            Property="Padding"
            Value="5,3,3,4" />
    <Setter x:Uid="Setter_466"
            Property="Foreground"
            Value="{DynamicResource CrystalForeground2}" />
    <Setter x:Uid="Setter_467"
            Property="HorizontalContentAlignment"
            Value="Stretch" />
    <Setter x:Uid="Setter_468"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_51"
                         TargetType="{x:Type TreeViewItem}">
          <Grid x:Uid="Grid_36">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.5" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <DoubleAnimation To="1"
                                     Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                     Storyboard.TargetName="ItemsHost">
                      <DoubleAnimation.EasingFunction>
                        <QuadraticEase EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <DoubleAnimation To="0"
                                     Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                     Storyboard.TargetName="ItemsHost">
                      <DoubleAnimation.EasingFunction>
                        <QuadraticEase EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Uid="ColumnDefinition_36"
                                Width="Auto" />
              <ColumnDefinition x:Uid="ColumnDefinition_37" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Uid="RowDefinition_24"
                             Height="Auto" />
              <RowDefinition x:Uid="RowDefinition_25" />
            </Grid.RowDefinitions>
            <Border x:Uid="BgGrid"
                    x:Name="BgGrid"
                    Grid.ColumnSpan="2"
                    CornerRadius="10" />
            <ToggleButton x:Uid="Expander"
                          x:Name="Expander"
                          Margin="3,0,0,0"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ExpandCollapseToggleStyle}" />
            <Border x:Uid="Border_29"
                    x:Name="Bd"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Grid.Column="1"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="true">
              <ContentPresenter x:Uid="PART_Header"
                                x:Name="PART_Header"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ItemsPresenter x:Uid="ItemsHost"
                            x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.Row="1">
              <ItemsPresenter.LayoutTransform>
                <ScaleTransform ScaleY="0" />
              </ItemsPresenter.LayoutTransform>
            </ItemsPresenter>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_93"
                     Property="IsSelected"
                     Value="True">
              <Setter x:Uid="Setter_470"
                      Property="Background"
                      TargetName="BgGrid"
                      Value="{StaticResource TreeViewItem.SelectedBrush}" />
            </Trigger>

            <MultiTrigger x:Uid="MultiTrigger_8">
              <MultiTrigger.Conditions>
                <Condition x:Uid="Condition_17"
                           Property="IsMouseOver"
                           SourceName="Bd"
                           Value="True" />
                <Condition x:Uid="Condition_18"
                           Property="IsSelected"
                           Value="False" />
              </MultiTrigger.Conditions>
              <Setter x:Uid="Setter_471"
                      Property="Background"
                      TargetName="BgGrid"
                      Value="{StaticResource TreeViewItem.HoverBrush}" />
            </MultiTrigger>

            <Trigger x:Uid="Trigger_94"
                     Property="HasItems"
                     Value="false">
              <Setter x:Uid="Setter_472"
                      Property="Visibility"
                      TargetName="Expander"
                      Value="Hidden" />
            </Trigger>
            <Trigger x:Uid="Trigger_95"
                     Property="IsEnabled"
                     Value="false">
              <Setter x:Uid="Setter_473"
                      Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for TreeViews-->
  <SolidColorBrush x:Uid="SolidColorBrush_67"
                   x:Key="ListBorder"
                   Color="#828790" />
  <Style x:Uid="Style_59"
         TargetType="{x:Type TreeView}">
    <Setter x:Uid="Setter_474"
            Property="Background"
            Value="Transparent" />
    <Setter x:Uid="Setter_475"
            Property="BorderBrush"
            Value="Transparent" />
    <Setter x:Uid="Setter_476"
            Property="BorderThickness"
            Value="1" />
    <Setter x:Uid="Setter_477"
            Property="Padding"
            Value="1" />
    <Setter x:Uid="Setter_478"
            Property="Foreground"
            Value="{DynamicResource CrystalForeground}" />
    <Setter x:Uid="Setter_479"
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
    <Setter x:Uid="Setter_480"
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
    <Setter x:Uid="Setter_481"
            Property="ScrollViewer.PanningMode"
            Value="Both" />
    <Setter x:Uid="Setter_482"
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
    <Setter x:Uid="Setter_483"
            Property="VerticalContentAlignment"
            Value="Center" />
    <Setter x:Uid="Setter_484"
            Property="Template">
      <Setter.Value>
        <ControlTemplate x:Uid="ControlTemplate_52"
                         TargetType="{x:Type TreeView}">
          <Border x:Uid="Border_30"
                  x:Name="Bd"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="true">
            <ScrollViewer x:Uid="_tv_scrollviewer_"
                          x:Name="_tv_scrollviewer_"
                          Background="{TemplateBinding Background}"
                          CanContentScroll="false"
                          Focusable="false"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          Padding="{TemplateBinding Padding}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
              <ItemsPresenter x:Uid="ItemsPresenter_2" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger x:Uid="Trigger_96"
                     Property="IsEnabled"
                     Value="false">
              <Setter x:Uid="Setter_485"
                      Property="Opacity"
                      Value="0.2" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Set properties for windows-->
  <WindowChrome x:Key="CrystalChrome"
				  CaptionHeight="20"
				  GlassFrameThickness="0"
				  UseAeroCaptionButtons="False"
				  ResizeBorderThickness="8" CornerRadius="0"/>
  <Style x:Key="CrystalWindows"
		   TargetType="{x:Type Window}">
    <Setter Property="BorderBrush"
				Value="{StaticResource WindowBorder}" />
  </Style>
</ResourceDictionary>